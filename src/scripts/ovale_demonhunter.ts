import { OvaleScriptsClass } from "../engine/scripts";

export function registerDemonHunter(OvaleScripts: OvaleScriptsClass) {
    // THE REST OF THIS FILE IS AUTOMATICALLY GENERATED
    // ANY CHANGES MADE BELOW THIS POINT WILL BE LOST

    {
        const name = "sc_t26_demon_hunter_havoc";
        const desc = "[9.0] Simulationcraft: T26_Demon_Hunter_Havoc";
        const code = `
# Based on SimulationCraft profile "T26_Demon_Hunter_Havoc".
#	class=demonhunter
#	spec=havoc
#	talents=3310221

Include(ovale_common)
Include(ovale_demonhunter_spells)


AddFunction waiting_for_momentum
{
 hastalent(momentum_talent) and not buffpresent(momentum_buff)
}

AddFunction waiting_for_essence_break
{
 hastalent(essence_break_talent) and not pooling_for_blade_dance() and not pooling_for_meta() and not spellcooldown(essence_break) > 0
}

AddFunction pooling_for_eye_beam
{
 hastalent(demonic_talent) and not hastalent(blind_fury_talent) and spellcooldown(eye_beam) < gcd() * 2 and furydeficit() > 20
}

AddFunction pooling_for_blade_dance
{
 blade_dance() and fury() < 75 - talentpoints(first_blood_talent) * 20
}

AddFunction pooling_for_meta
{
 not hastalent(demonic_talent) and spellcooldown(metamorphosis) < 6 and furydeficit() > 30
}

AddFunction blade_dance
{
 hastalent(first_blood_talent) or enemies(tagged=1) >= 3 - { talentpoints(trail_of_ruin_talent) + buffpresent(metamorphosis_buff) } or runeforge(chaos_theory_runeforge) and buffexpires(chaos_blades)
}

AddCheckBox(opt_interrupt l(interrupt) default enabled=(specialization(havoc)))
AddCheckBox(opt_melee_range l(not_in_melee_range) enabled=(specialization(havoc)))
AddCheckBox(opt_use_consumables l(opt_use_consumables) default enabled=(specialization(havoc)))

AddListItem(opt_havoc_desired_targets desired_targets_1 "Desired targets: 1" default enabled=(specialization(havoc)))
AddListItem(opt_havoc_desired_targets desired_targets_2 "Desired targets: 2" enabled=(specialization(havoc)))
AddListItem(opt_havoc_desired_targets desired_targets_3 "Desired targets: 3" enabled=(specialization(havoc)))

AddCheckBox(opt_vengeful_retreat spellname(vengeful_retreat) default enabled=(specialization(havoc)))
AddCheckBox(opt_fel_rush spellname(fel_rush) default enabled=(specialization(havoc)))

AddFunction havocinterruptactions
{
 if checkboxon(opt_interrupt) and not target.isfriend() and target.casting()
 {
  if target.inrange(disrupt) and target.isinterruptible() spell(disrupt)
  if target.inrange(fel_eruption) and not target.classification(worldboss) spell(fel_eruption)
  if target.distance() < 8 and not target.classification(worldboss) spell(chaos_nova)
  if target.inrange(imprison) and not target.classification(worldboss) and target.creaturetype(demon humanoid beast) spell(imprison)
 }
}

AddFunction havocuseitemactions
{
 item(trinket0slot text=13 usable=1)
 item(trinket1slot text=14 usable=1)
}

AddFunction havocgetinmeleerange
{
 if checkboxon(opt_melee_range) and not target.inrange(chaos_strike)
 {
  if target.inrange(felblade) spell(felblade)
  texture(misc_arrowlup help=(l(not_in_melee_range)))
 }
}

AddFunction havocdesiredtargets
{
 if list(opt_havoc_desired_targets desired_targets_3) 3
 if list(opt_havoc_desired_targets desired_targets_2) 2
 1
}

### actions.precombat

AddFunction havocprecombatmainactions
{
}

AddFunction havocprecombatmainpostconditions
{
}

AddFunction havocprecombatshortcdactions
{
}

AddFunction havocprecombatshortcdpostconditions
{
}

AddFunction havocprecombatcdactions
{
 #flask
 #augmentation
 #food
 #snapshot_stats
 #potion
 if checkboxon(opt_use_consumables) and target.classification(worldboss) item(potion_of_phantom_fire_item usable=1)
 #use_item,name=azsharas_font_of_power
 havocuseitemactions()
}

AddFunction havocprecombatcdpostconditions
{
}

### actions.normal

AddFunction havocnormalmainactions
{
 #vengeful_retreat,if=talent.momentum.enabled&buff.prepared.down&time>1
 if hastalent(momentum_talent) and buffexpires(prepared_buff) and timeincombat() > 1 and checkboxon(opt_vengeful_retreat) spell(vengeful_retreat)
 #fel_rush,if=(variable.waiting_for_momentum|talent.unbound_chaos.enabled&buff.unbound_chaos.up)&(charges=2|(raid_event.movement.in>10&raid_event.adds.in>10))
 if { waiting_for_momentum() or hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) } and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) spell(fel_rush)
 #death_sweep,if=variable.blade_dance
 if blade_dance() spell(death_sweep)
 #glaive_tempest,if=!variable.waiting_for_momentum&(active_enemies>desired_targets|raid_event.adds.in>10)
 if not waiting_for_momentum() and { enemies() > havocdesiredtargets() or 600 > 10 } spell(glaive_tempest)
 #throw_glaive,if=conduit.serrated_glaive.enabled&cooldown.eye_beam.remains<6&!buff.metamorphosis.up&!debuff.exposed_wound.up
 if conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) spell(throw_glaive)
 #blade_dance,if=variable.blade_dance
 if blade_dance() spell(blade_dance)
 #felblade,if=fury.deficit>=40
 if furydeficit() >= 40 spell(felblade)
 #annihilation,if=(talent.demon_blades.enabled|!variable.waiting_for_momentum|fury.deficit<30|buff.metamorphosis.remains<5)&!variable.pooling_for_blade_dance&!variable.waiting_for_essence_break
 if { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 or buffremaining(metamorphosis_buff) < 5 } and not pooling_for_blade_dance() and not waiting_for_essence_break() spell(annihilation)
 #chaos_strike,if=(talent.demon_blades.enabled|!variable.waiting_for_momentum|fury.deficit<30)&!variable.pooling_for_meta&!variable.pooling_for_blade_dance&!variable.waiting_for_essence_break
 if { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 } and not pooling_for_meta() and not pooling_for_blade_dance() and not waiting_for_essence_break() spell(chaos_strike_havoc)
 #demons_bite,target_if=min:debuff.burning_wound.remains,if=runeforge.burning_wound&debuff.burning_wound.remains<4
 if runeforge(burning_wound_runeforge) and target.debuffremaining(burning_wound_debuff) < 4 spell(demons_bite)
 #demons_bite
 spell(demons_bite)
 #fel_rush,if=!talent.momentum.enabled&raid_event.movement.in>charges*10&talent.demon_blades.enabled
 if not hastalent(momentum_talent) and 600 > charges(fel_rush) * 10 and hastalent(demon_blades_talent) and checkboxon(opt_fel_rush) spell(fel_rush)
 #felblade,if=movement.distance>15|buff.out_of_range.up
 if target.distance() > 15 or not target.inrange() spell(felblade)
 #fel_rush,if=movement.distance>15|(buff.out_of_range.up&!talent.momentum.enabled)
 if { target.distance() > 15 or not target.inrange() and not hastalent(momentum_talent) } and checkboxon(opt_fel_rush) spell(fel_rush)
 #vengeful_retreat,if=movement.distance>15
 if target.distance() > 15 and checkboxon(opt_vengeful_retreat) spell(vengeful_retreat)
 #throw_glaive,if=talent.demon_blades.enabled
 if hastalent(demon_blades_talent) spell(throw_glaive)
}

AddFunction havocnormalmainpostconditions
{
}

AddFunction havocnormalshortcdactions
{
 unless hastalent(momentum_talent) and buffexpires(prepared_buff) and timeincombat() > 1 and checkboxon(opt_vengeful_retreat) and spell(vengeful_retreat) or { waiting_for_momentum() or hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) } and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush)
 {
  #fel_barrage,if=active_enemies>desired_targets|raid_event.adds.in>30
  if enemies() > havocdesiredtargets() or 600 > 30 spell(fel_barrage)

  unless blade_dance() and spell(death_sweep)
  {
   #immolation_aura
   spell(immolation_aura)

   unless not waiting_for_momentum() and { enemies() > havocdesiredtargets() or 600 > 10 } and spell(glaive_tempest) or conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) and spell(throw_glaive)
   {
    #eye_beam,if=!variable.waiting_for_momentum&(active_enemies>desired_targets|raid_event.adds.in>15)
    if not waiting_for_momentum() and { enemies() > havocdesiredtargets() or 600 > 15 } spell(eye_beam)

    unless blade_dance() and spell(blade_dance) or furydeficit() >= 40 and spell(felblade) or { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 or buffremaining(metamorphosis_buff) < 5 } and not pooling_for_blade_dance() and not waiting_for_essence_break() and spell(annihilation) or { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 } and not pooling_for_meta() and not pooling_for_blade_dance() and not waiting_for_essence_break() and spell(chaos_strike_havoc)
    {
     #eye_beam,if=talent.blind_fury.enabled&raid_event.adds.in>cooldown
     if hastalent(blind_fury_talent) and 600 > spellcooldown(eye_beam) spell(eye_beam)
    }
   }
  }
 }
}

AddFunction havocnormalshortcdpostconditions
{
 hastalent(momentum_talent) and buffexpires(prepared_buff) and timeincombat() > 1 and checkboxon(opt_vengeful_retreat) and spell(vengeful_retreat) or { waiting_for_momentum() or hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) } and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush) or blade_dance() and spell(death_sweep) or not waiting_for_momentum() and { enemies() > havocdesiredtargets() or 600 > 10 } and spell(glaive_tempest) or conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) and spell(throw_glaive) or blade_dance() and spell(blade_dance) or furydeficit() >= 40 and spell(felblade) or { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 or buffremaining(metamorphosis_buff) < 5 } and not pooling_for_blade_dance() and not waiting_for_essence_break() and spell(annihilation) or { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 } and not pooling_for_meta() and not pooling_for_blade_dance() and not waiting_for_essence_break() and spell(chaos_strike_havoc) or runeforge(burning_wound_runeforge) and target.debuffremaining(burning_wound_debuff) < 4 and spell(demons_bite) or spell(demons_bite) or not hastalent(momentum_talent) and 600 > charges(fel_rush) * 10 and hastalent(demon_blades_talent) and checkboxon(opt_fel_rush) and spell(fel_rush) or { target.distance() > 15 or not target.inrange() } and spell(felblade) or { target.distance() > 15 or not target.inrange() and not hastalent(momentum_talent) } and checkboxon(opt_fel_rush) and spell(fel_rush) or target.distance() > 15 and checkboxon(opt_vengeful_retreat) and spell(vengeful_retreat) or hastalent(demon_blades_talent) and spell(throw_glaive)
}

AddFunction havocnormalcdactions
{
}

AddFunction havocnormalcdpostconditions
{
 hastalent(momentum_talent) and buffexpires(prepared_buff) and timeincombat() > 1 and checkboxon(opt_vengeful_retreat) and spell(vengeful_retreat) or { waiting_for_momentum() or hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) } and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush) or { enemies() > havocdesiredtargets() or 600 > 30 } and spell(fel_barrage) or blade_dance() and spell(death_sweep) or spell(immolation_aura) or not waiting_for_momentum() and { enemies() > havocdesiredtargets() or 600 > 10 } and spell(glaive_tempest) or conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) and spell(throw_glaive) or not waiting_for_momentum() and { enemies() > havocdesiredtargets() or 600 > 15 } and spell(eye_beam) or blade_dance() and spell(blade_dance) or furydeficit() >= 40 and spell(felblade) or { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 or buffremaining(metamorphosis_buff) < 5 } and not pooling_for_blade_dance() and not waiting_for_essence_break() and spell(annihilation) or { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 } and not pooling_for_meta() and not pooling_for_blade_dance() and not waiting_for_essence_break() and spell(chaos_strike_havoc) or hastalent(blind_fury_talent) and 600 > spellcooldown(eye_beam) and spell(eye_beam) or runeforge(burning_wound_runeforge) and target.debuffremaining(burning_wound_debuff) < 4 and spell(demons_bite) or spell(demons_bite) or not hastalent(momentum_talent) and 600 > charges(fel_rush) * 10 and hastalent(demon_blades_talent) and checkboxon(opt_fel_rush) and spell(fel_rush) or { target.distance() > 15 or not target.inrange() } and spell(felblade) or { target.distance() > 15 or not target.inrange() and not hastalent(momentum_talent) } and checkboxon(opt_fel_rush) and spell(fel_rush) or target.distance() > 15 and checkboxon(opt_vengeful_retreat) and spell(vengeful_retreat) or hastalent(demon_blades_talent) and spell(throw_glaive)
}

### actions.essence_break

AddFunction havocessence_breakmainactions
{
 #essence_break,if=fury>=80&(cooldown.blade_dance.ready|!variable.blade_dance)
 if fury() >= 80 and { spellcooldown(blade_dance) <= 0 or not blade_dance() } spell(essence_break)
 #death_sweep,if=variable.blade_dance&debuff.essence_break.up
 if blade_dance() and target.debuffpresent(essence_break_debuff) spell(death_sweep)
 #blade_dance,if=variable.blade_dance&debuff.essence_break.up
 if blade_dance() and target.debuffpresent(essence_break_debuff) spell(blade_dance)
 #annihilation,if=debuff.essence_break.up
 if target.debuffpresent(essence_break_debuff) spell(annihilation)
 #chaos_strike,if=debuff.essence_break.up
 if target.debuffpresent(essence_break_debuff) spell(chaos_strike_havoc)
}

AddFunction havocessence_breakmainpostconditions
{
}

AddFunction havocessence_breakshortcdactions
{
}

AddFunction havocessence_breakshortcdpostconditions
{
 fury() >= 80 and { spellcooldown(blade_dance) <= 0 or not blade_dance() } and spell(essence_break) or blade_dance() and target.debuffpresent(essence_break_debuff) and spell(death_sweep) or blade_dance() and target.debuffpresent(essence_break_debuff) and spell(blade_dance) or target.debuffpresent(essence_break_debuff) and spell(annihilation) or target.debuffpresent(essence_break_debuff) and spell(chaos_strike_havoc)
}

AddFunction havocessence_breakcdactions
{
}

AddFunction havocessence_breakcdpostconditions
{
 fury() >= 80 and { spellcooldown(blade_dance) <= 0 or not blade_dance() } and spell(essence_break) or blade_dance() and target.debuffpresent(essence_break_debuff) and spell(death_sweep) or blade_dance() and target.debuffpresent(essence_break_debuff) and spell(blade_dance) or target.debuffpresent(essence_break_debuff) and spell(annihilation) or target.debuffpresent(essence_break_debuff) and spell(chaos_strike_havoc)
}

### actions.demonic

AddFunction havocdemonicmainactions
{
 #fel_rush,if=(talent.unbound_chaos.enabled&buff.unbound_chaos.up)&(charges=2|(raid_event.movement.in>10&raid_event.adds.in>10))
 if hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) spell(fel_rush)
 #death_sweep,if=variable.blade_dance
 if blade_dance() spell(death_sweep)
 #glaive_tempest,if=active_enemies>desired_targets|raid_event.adds.in>10
 if enemies() > havocdesiredtargets() or 600 > 10 spell(glaive_tempest)
 #throw_glaive,if=conduit.serrated_glaive.enabled&cooldown.eye_beam.remains<6&!buff.metamorphosis.up&!debuff.exposed_wound.up
 if conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) spell(throw_glaive)
 #blade_dance,if=variable.blade_dance&!cooldown.metamorphosis.ready&(cooldown.eye_beam.remains>5|(raid_event.adds.in>cooldown&raid_event.adds.in<25))
 if blade_dance() and not { { not checkboxon(opt_meta_only_during_boss) or isbossfight() } and spellcooldown(metamorphosis) <= 0 } and { spellcooldown(eye_beam) > 5 or 600 > spellcooldown(blade_dance) and 600 < 25 } spell(blade_dance)
 #annihilation,if=!variable.pooling_for_blade_dance
 if not pooling_for_blade_dance() spell(annihilation)
 #felblade,if=fury.deficit>=40
 if furydeficit() >= 40 spell(felblade)
 #chaos_strike,if=!variable.pooling_for_blade_dance&!variable.pooling_for_eye_beam
 if not pooling_for_blade_dance() and not pooling_for_eye_beam() spell(chaos_strike_havoc)
 #fel_rush,if=talent.demon_blades.enabled&!cooldown.eye_beam.ready&(charges=2|(raid_event.movement.in>10&raid_event.adds.in>10))
 if hastalent(demon_blades_talent) and not spellcooldown(eye_beam) <= 0 and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) spell(fel_rush)
 #demons_bite,target_if=min:debuff.burning_wound.remains,if=runeforge.burning_wound&debuff.burning_wound.remains<4
 if runeforge(burning_wound_runeforge) and target.debuffremaining(burning_wound_debuff) < 4 spell(demons_bite)
 #demons_bite
 spell(demons_bite)
 #throw_glaive,if=buff.out_of_range.up
 if not target.inrange() spell(throw_glaive)
 #fel_rush,if=movement.distance>15|buff.out_of_range.up
 if { target.distance() > 15 or not target.inrange() } and checkboxon(opt_fel_rush) spell(fel_rush)
 #vengeful_retreat,if=movement.distance>15
 if target.distance() > 15 and checkboxon(opt_vengeful_retreat) spell(vengeful_retreat)
 #throw_glaive,if=talent.demon_blades.enabled
 if hastalent(demon_blades_talent) spell(throw_glaive)
}

AddFunction havocdemonicmainpostconditions
{
}

AddFunction havocdemonicshortcdactions
{
 unless hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush) or blade_dance() and spell(death_sweep) or { enemies() > havocdesiredtargets() or 600 > 10 } and spell(glaive_tempest) or conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) and spell(throw_glaive)
 {
  #eye_beam,if=raid_event.adds.up|raid_event.adds.in>25
  if never(raid_event_adds_exists) or 600 > 25 spell(eye_beam)

  unless blade_dance() and not { { not checkboxon(opt_meta_only_during_boss) or isbossfight() } and spellcooldown(metamorphosis) <= 0 } and { spellcooldown(eye_beam) > 5 or 600 > spellcooldown(blade_dance) and 600 < 25 } and spell(blade_dance)
  {
   #immolation_aura
   spell(immolation_aura)
  }
 }
}

AddFunction havocdemonicshortcdpostconditions
{
 hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush) or blade_dance() and spell(death_sweep) or { enemies() > havocdesiredtargets() or 600 > 10 } and spell(glaive_tempest) or conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) and spell(throw_glaive) or blade_dance() and not { { not checkboxon(opt_meta_only_during_boss) or isbossfight() } and spellcooldown(metamorphosis) <= 0 } and { spellcooldown(eye_beam) > 5 or 600 > spellcooldown(blade_dance) and 600 < 25 } and spell(blade_dance) or not pooling_for_blade_dance() and spell(annihilation) or furydeficit() >= 40 and spell(felblade) or not pooling_for_blade_dance() and not pooling_for_eye_beam() and spell(chaos_strike_havoc) or hastalent(demon_blades_talent) and not spellcooldown(eye_beam) <= 0 and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush) or runeforge(burning_wound_runeforge) and target.debuffremaining(burning_wound_debuff) < 4 and spell(demons_bite) or spell(demons_bite) or not target.inrange() and spell(throw_glaive) or { target.distance() > 15 or not target.inrange() } and checkboxon(opt_fel_rush) and spell(fel_rush) or target.distance() > 15 and checkboxon(opt_vengeful_retreat) and spell(vengeful_retreat) or hastalent(demon_blades_talent) and spell(throw_glaive)
}

AddFunction havocdemoniccdactions
{
}

AddFunction havocdemoniccdpostconditions
{
 hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush) or blade_dance() and spell(death_sweep) or { enemies() > havocdesiredtargets() or 600 > 10 } and spell(glaive_tempest) or conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) and spell(throw_glaive) or { never(raid_event_adds_exists) or 600 > 25 } and spell(eye_beam) or blade_dance() and not { { not checkboxon(opt_meta_only_during_boss) or isbossfight() } and spellcooldown(metamorphosis) <= 0 } and { spellcooldown(eye_beam) > 5 or 600 > spellcooldown(blade_dance) and 600 < 25 } and spell(blade_dance) or spell(immolation_aura) or not pooling_for_blade_dance() and spell(annihilation) or furydeficit() >= 40 and spell(felblade) or not pooling_for_blade_dance() and not pooling_for_eye_beam() and spell(chaos_strike_havoc) or hastalent(demon_blades_talent) and not spellcooldown(eye_beam) <= 0 and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush) or runeforge(burning_wound_runeforge) and target.debuffremaining(burning_wound_debuff) < 4 and spell(demons_bite) or spell(demons_bite) or not target.inrange() and spell(throw_glaive) or { target.distance() > 15 or not target.inrange() } and checkboxon(opt_fel_rush) and spell(fel_rush) or target.distance() > 15 and checkboxon(opt_vengeful_retreat) and spell(vengeful_retreat) or hastalent(demon_blades_talent) and spell(throw_glaive)
}

### actions.cooldown

AddFunction havoccooldownmainactions
{
}

AddFunction havoccooldownmainpostconditions
{
}

AddFunction havoccooldownshortcdactions
{
 #sinful_brand,if=!dot.sinful_brand.ticking
 if not target.debuffpresent(sinful_brand) spell(sinful_brand)
 #the_hunt,if=!talent.demonic.enabled&!variable.waiting_for_momentum|buff.furious_gaze.up
 if not hastalent(demonic_talent) and not waiting_for_momentum() or buffpresent(furious_gaze_buff) spell(the_hunt)
 #elysian_decree,if=(active_enemies>desired_targets|raid_event.adds.in>30)
 if enemies() > havocdesiredtargets() or 600 > 30 spell(elysian_decree)
}

AddFunction havoccooldownshortcdpostconditions
{
}

AddFunction havoccooldowncdactions
{
 #metamorphosis,if=!(talent.demonic.enabled|variable.pooling_for_meta)&cooldown.eye_beam.remains>20&(!covenant.venthyr.enabled|!dot.sinful_brand.ticking)|fight_remains<25
 if not { hastalent(demonic_talent) or pooling_for_meta() } and spellcooldown(eye_beam) > 20 and { not iscovenant("venthyr") or not target.debuffpresent(sinful_brand) } or fightremains() < 25 spell(metamorphosis)
 #metamorphosis,if=talent.demonic.enabled&(cooldown.eye_beam.remains>20&(!variable.blade_dance|cooldown.blade_dance.remains>gcd.max))&(!covenant.venthyr.enabled|!dot.sinful_brand.ticking)
 if hastalent(demonic_talent) and spellcooldown(eye_beam) > 20 and { not blade_dance() or spellcooldown(blade_dance) > gcd() } and { not iscovenant("venthyr") or not target.debuffpresent(sinful_brand) } spell(metamorphosis)

 unless not target.debuffpresent(sinful_brand) and spell(sinful_brand) or { not hastalent(demonic_talent) and not waiting_for_momentum() or buffpresent(furious_gaze_buff) } and spell(the_hunt)
 {
  #fodder_to_the_flame
  spell(fodder_to_the_flame)

  unless { enemies() > havocdesiredtargets() or 600 > 30 } and spell(elysian_decree)
  {
   #potion,if=buff.metamorphosis.remains>25|fight_remains<60
   if { buffremaining(metamorphosis_buff) > 25 or fightremains() < 60 } and { checkboxon(opt_use_consumables) and target.classification(worldboss) } item(potion_of_phantom_fire_item usable=1)
   #use_items,if=buff.metamorphosis.up
   if buffpresent(metamorphosis_buff) havocuseitemactions()
  }
 }
}

AddFunction havoccooldowncdpostconditions
{
 not target.debuffpresent(sinful_brand) and spell(sinful_brand) or { not hastalent(demonic_talent) and not waiting_for_momentum() or buffpresent(furious_gaze_buff) } and spell(the_hunt) or { enemies() > havocdesiredtargets() or 600 > 30 } and spell(elysian_decree)
}

### actions.default

AddFunction havoc_defaultmainactions
{
 #call_action_list,name=cooldown,if=gcd.remains=0
 if not gcdremaining() > 0 havoccooldownmainactions()

 unless not gcdremaining() > 0 and havoccooldownmainpostconditions()
 {
  #pick_up_fragment,type=demon,if=demon_soul_fragments>0
  if soulfragments() > 0 and soulfragments() > 0 texture(spell_shadow_soulgem text=pickup)
  #pick_up_fragment,if=fury.deficit>=35
  if furydeficit() >= 35 and soulfragments() > 0 texture(spell_shadow_soulgem text=pickup)
  #throw_glaive,if=buff.fel_bombardment.stack=5&(buff.immolation_aura.up|!buff.metamorphosis.up)
  if buffstacks(fel_bombardment_buff) == 5 and { buffpresent(immolation_aura) or not buffpresent(metamorphosis_buff) } spell(throw_glaive)
  #call_action_list,name=essence_break,if=talent.essence_break.enabled&(variable.waiting_for_essence_break|debuff.essence_break.up)
  if hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } havocessence_breakmainactions()

  unless hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } and havocessence_breakmainpostconditions()
  {
   #run_action_list,name=demonic,if=talent.demonic.enabled
   if hastalent(demonic_talent) havocdemonicmainactions()

   unless hastalent(demonic_talent) and havocdemonicmainpostconditions()
   {
    #run_action_list,name=normal
    havocnormalmainactions()
   }
  }
 }
}

AddFunction havoc_defaultmainpostconditions
{
 not gcdremaining() > 0 and havoccooldownmainpostconditions() or hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } and havocessence_breakmainpostconditions() or hastalent(demonic_talent) and havocdemonicmainpostconditions() or havocnormalmainpostconditions()
}

AddFunction havoc_defaultshortcdactions
{
 #auto_attack
 havocgetinmeleerange()
 #call_action_list,name=cooldown,if=gcd.remains=0
 if not gcdremaining() > 0 havoccooldownshortcdactions()

 unless not gcdremaining() > 0 and havoccooldownshortcdpostconditions() or soulfragments() > 0 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or furydeficit() >= 35 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or buffstacks(fel_bombardment_buff) == 5 and { buffpresent(immolation_aura) or not buffpresent(metamorphosis_buff) } and spell(throw_glaive)
 {
  #call_action_list,name=essence_break,if=talent.essence_break.enabled&(variable.waiting_for_essence_break|debuff.essence_break.up)
  if hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } havocessence_breakshortcdactions()

  unless hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } and havocessence_breakshortcdpostconditions()
  {
   #run_action_list,name=demonic,if=talent.demonic.enabled
   if hastalent(demonic_talent) havocdemonicshortcdactions()

   unless hastalent(demonic_talent) and havocdemonicshortcdpostconditions()
   {
    #run_action_list,name=normal
    havocnormalshortcdactions()
   }
  }
 }
}

AddFunction havoc_defaultshortcdpostconditions
{
 not gcdremaining() > 0 and havoccooldownshortcdpostconditions() or soulfragments() > 0 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or furydeficit() >= 35 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or buffstacks(fel_bombardment_buff) == 5 and { buffpresent(immolation_aura) or not buffpresent(metamorphosis_buff) } and spell(throw_glaive) or hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } and havocessence_breakshortcdpostconditions() or hastalent(demonic_talent) and havocdemonicshortcdpostconditions() or havocnormalshortcdpostconditions()
}

AddFunction havoc_defaultcdactions
{
 #variable,name=blade_dance,value=talent.first_blood.enabled|spell_targets.blade_dance1>=(3-(talent.trail_of_ruin.enabled+buff.metamorphosis.up))|runeforge.chaos_theory&buff.chaos_theory.down
 #variable,name=pooling_for_meta,value=!talent.demonic.enabled&cooldown.metamorphosis.remains<6&fury.deficit>30
 #variable,name=pooling_for_blade_dance,value=variable.blade_dance&(fury<75-talent.first_blood.enabled*20)
 #variable,name=pooling_for_eye_beam,value=talent.demonic.enabled&!talent.blind_fury.enabled&cooldown.eye_beam.remains<(gcd.max*2)&fury.deficit>20
 #variable,name=waiting_for_essence_break,value=talent.essence_break.enabled&!variable.pooling_for_blade_dance&!variable.pooling_for_meta&cooldown.essence_break.up
 #variable,name=waiting_for_momentum,value=talent.momentum.enabled&!buff.momentum.up
 #disrupt
 havocinterruptactions()
 #call_action_list,name=cooldown,if=gcd.remains=0
 if not gcdremaining() > 0 havoccooldowncdactions()

 unless not gcdremaining() > 0 and havoccooldowncdpostconditions() or soulfragments() > 0 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or furydeficit() >= 35 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or buffstacks(fel_bombardment_buff) == 5 and { buffpresent(immolation_aura) or not buffpresent(metamorphosis_buff) } and spell(throw_glaive)
 {
  #call_action_list,name=essence_break,if=talent.essence_break.enabled&(variable.waiting_for_essence_break|debuff.essence_break.up)
  if hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } havocessence_breakcdactions()

  unless hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } and havocessence_breakcdpostconditions()
  {
   #run_action_list,name=demonic,if=talent.demonic.enabled
   if hastalent(demonic_talent) havocdemoniccdactions()

   unless hastalent(demonic_talent) and havocdemoniccdpostconditions()
   {
    #run_action_list,name=normal
    havocnormalcdactions()
   }
  }
 }
}

AddFunction havoc_defaultcdpostconditions
{
 not gcdremaining() > 0 and havoccooldowncdpostconditions() or soulfragments() > 0 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or furydeficit() >= 35 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or buffstacks(fel_bombardment_buff) == 5 and { buffpresent(immolation_aura) or not buffpresent(metamorphosis_buff) } and spell(throw_glaive) or hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } and havocessence_breakcdpostconditions() or hastalent(demonic_talent) and havocdemoniccdpostconditions() or havocnormalcdpostconditions()
}

### Havoc icons.

AddCheckBox(opt_demonhunter_havoc_aoe l(aoe) default enabled=(specialization(havoc)))

AddIcon enabled=(not checkboxon(opt_demonhunter_havoc_aoe) and specialization(havoc)) enemies=1 help=shortcd
{
 if not incombat() havocprecombatshortcdactions()
 havoc_defaultshortcdactions()
}

AddIcon enabled=(checkboxon(opt_demonhunter_havoc_aoe) and specialization(havoc)) help=shortcd
{
 if not incombat() havocprecombatshortcdactions()
 havoc_defaultshortcdactions()
}

AddIcon enabled=(specialization(havoc)) enemies=1 help=main
{
 if not incombat() havocprecombatmainactions()
 havoc_defaultmainactions()
}

AddIcon enabled=(checkboxon(opt_demonhunter_havoc_aoe) and specialization(havoc)) help=aoe
{
 if not incombat() havocprecombatmainactions()
 havoc_defaultmainactions()
}

AddIcon enabled=(not checkboxon(opt_demonhunter_havoc_aoe) and specialization(havoc)) enemies=1 help=cd
{
 if not incombat() havocprecombatcdactions()
 havoc_defaultcdactions()
}

AddIcon enabled=(checkboxon(opt_demonhunter_havoc_aoe) and specialization(havoc)) help=cd
{
 if not incombat() havocprecombatcdactions()
 havoc_defaultcdactions()
}

### Required symbols
# annihilation
# blade_dance
# blind_fury_talent
# burning_wound_debuff
# burning_wound_runeforge
# chaos_blades
# chaos_nova
# chaos_strike
# chaos_strike_havoc
# chaos_theory_runeforge
# death_sweep
# demon_blades_talent
# demonic_talent
# demons_bite
# disrupt
# elysian_decree
# essence_break
# essence_break_debuff
# essence_break_talent
# exposed_wound_debuff
# eye_beam
# fel_barrage
# fel_bombardment_buff
# fel_eruption
# fel_rush
# felblade
# first_blood_talent
# fodder_to_the_flame
# furious_gaze_buff
# glaive_tempest
# immolation_aura
# imprison
# metamorphosis
# metamorphosis_buff
# momentum_buff
# momentum_talent
# potion_of_phantom_fire_item
# prepared_buff
# serrated_glaive_conduit
# sinful_brand
# the_hunt
# throw_glaive
# trail_of_ruin_talent
# unbound_chaos_buff
# unbound_chaos_talent
# vengeful_retreat
`;
        OvaleScripts.RegisterScript(
            "DEMONHUNTER",
            "havoc",
            name,
            desc,
            code,
            "script"
        );
    }

    {
        const name = "sc_t26_demon_hunter_havoc_momentum";
        const desc = "[9.0] Simulationcraft: T26_Demon_Hunter_Havoc_Momentum";
        const code = `
# Based on SimulationCraft profile "T26_Demon_Hunter_Havoc_Momentum".
#	class=demonhunter
#	spec=havoc
#	talents=3310222

Include(ovale_common)
Include(ovale_demonhunter_spells)


AddFunction waiting_for_momentum
{
 hastalent(momentum_talent) and not buffpresent(momentum_buff)
}

AddFunction waiting_for_essence_break
{
 hastalent(essence_break_talent) and not pooling_for_blade_dance() and not pooling_for_meta() and not spellcooldown(essence_break) > 0
}

AddFunction pooling_for_eye_beam
{
 hastalent(demonic_talent) and not hastalent(blind_fury_talent) and spellcooldown(eye_beam) < gcd() * 2 and furydeficit() > 20
}

AddFunction pooling_for_blade_dance
{
 blade_dance() and fury() < 75 - talentpoints(first_blood_talent) * 20
}

AddFunction pooling_for_meta
{
 not hastalent(demonic_talent) and spellcooldown(metamorphosis) < 6 and furydeficit() > 30
}

AddFunction blade_dance
{
 hastalent(first_blood_talent) or enemies(tagged=1) >= 3 - { talentpoints(trail_of_ruin_talent) + buffpresent(metamorphosis_buff) } or runeforge(chaos_theory_runeforge) and buffexpires(chaos_blades)
}

AddCheckBox(opt_interrupt l(interrupt) default enabled=(specialization(havoc)))
AddCheckBox(opt_melee_range l(not_in_melee_range) enabled=(specialization(havoc)))
AddCheckBox(opt_use_consumables l(opt_use_consumables) default enabled=(specialization(havoc)))

AddListItem(opt_havoc_desired_targets desired_targets_1 "Desired targets: 1" default enabled=(specialization(havoc)))
AddListItem(opt_havoc_desired_targets desired_targets_2 "Desired targets: 2" enabled=(specialization(havoc)))
AddListItem(opt_havoc_desired_targets desired_targets_3 "Desired targets: 3" enabled=(specialization(havoc)))

AddCheckBox(opt_vengeful_retreat spellname(vengeful_retreat) default enabled=(specialization(havoc)))
AddCheckBox(opt_fel_rush spellname(fel_rush) default enabled=(specialization(havoc)))

AddFunction havocinterruptactions
{
 if checkboxon(opt_interrupt) and not target.isfriend() and target.casting()
 {
  if target.inrange(disrupt) and target.isinterruptible() spell(disrupt)
  if target.inrange(fel_eruption) and not target.classification(worldboss) spell(fel_eruption)
  if target.distance() < 8 and not target.classification(worldboss) spell(chaos_nova)
  if target.inrange(imprison) and not target.classification(worldboss) and target.creaturetype(demon humanoid beast) spell(imprison)
 }
}

AddFunction havocuseitemactions
{
 item(trinket0slot text=13 usable=1)
 item(trinket1slot text=14 usable=1)
}

AddFunction havocgetinmeleerange
{
 if checkboxon(opt_melee_range) and not target.inrange(chaos_strike)
 {
  if target.inrange(felblade) spell(felblade)
  texture(misc_arrowlup help=(l(not_in_melee_range)))
 }
}

AddFunction havocdesiredtargets
{
 if list(opt_havoc_desired_targets desired_targets_3) 3
 if list(opt_havoc_desired_targets desired_targets_2) 2
 1
}

### actions.precombat

AddFunction havocprecombatmainactions
{
}

AddFunction havocprecombatmainpostconditions
{
}

AddFunction havocprecombatshortcdactions
{
}

AddFunction havocprecombatshortcdpostconditions
{
}

AddFunction havocprecombatcdactions
{
 #flask
 #augmentation
 #food
 #snapshot_stats
 #potion
 if checkboxon(opt_use_consumables) and target.classification(worldboss) item(potion_of_phantom_fire_item usable=1)
 #use_item,name=azsharas_font_of_power
 havocuseitemactions()
}

AddFunction havocprecombatcdpostconditions
{
}

### actions.normal

AddFunction havocnormalmainactions
{
 #vengeful_retreat,if=talent.momentum.enabled&buff.prepared.down&time>1
 if hastalent(momentum_talent) and buffexpires(prepared_buff) and timeincombat() > 1 and checkboxon(opt_vengeful_retreat) spell(vengeful_retreat)
 #fel_rush,if=(variable.waiting_for_momentum|talent.unbound_chaos.enabled&buff.unbound_chaos.up)&(charges=2|(raid_event.movement.in>10&raid_event.adds.in>10))
 if { waiting_for_momentum() or hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) } and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) spell(fel_rush)
 #death_sweep,if=variable.blade_dance
 if blade_dance() spell(death_sweep)
 #glaive_tempest,if=!variable.waiting_for_momentum&(active_enemies>desired_targets|raid_event.adds.in>10)
 if not waiting_for_momentum() and { enemies() > havocdesiredtargets() or 600 > 10 } spell(glaive_tempest)
 #throw_glaive,if=conduit.serrated_glaive.enabled&cooldown.eye_beam.remains<6&!buff.metamorphosis.up&!debuff.exposed_wound.up
 if conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) spell(throw_glaive)
 #blade_dance,if=variable.blade_dance
 if blade_dance() spell(blade_dance)
 #felblade,if=fury.deficit>=40
 if furydeficit() >= 40 spell(felblade)
 #annihilation,if=(talent.demon_blades.enabled|!variable.waiting_for_momentum|fury.deficit<30|buff.metamorphosis.remains<5)&!variable.pooling_for_blade_dance&!variable.waiting_for_essence_break
 if { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 or buffremaining(metamorphosis_buff) < 5 } and not pooling_for_blade_dance() and not waiting_for_essence_break() spell(annihilation)
 #chaos_strike,if=(talent.demon_blades.enabled|!variable.waiting_for_momentum|fury.deficit<30)&!variable.pooling_for_meta&!variable.pooling_for_blade_dance&!variable.waiting_for_essence_break
 if { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 } and not pooling_for_meta() and not pooling_for_blade_dance() and not waiting_for_essence_break() spell(chaos_strike_havoc)
 #demons_bite,target_if=min:debuff.burning_wound.remains,if=runeforge.burning_wound&debuff.burning_wound.remains<4
 if runeforge(burning_wound_runeforge) and target.debuffremaining(burning_wound_debuff) < 4 spell(demons_bite)
 #demons_bite
 spell(demons_bite)
 #fel_rush,if=!talent.momentum.enabled&raid_event.movement.in>charges*10&talent.demon_blades.enabled
 if not hastalent(momentum_talent) and 600 > charges(fel_rush) * 10 and hastalent(demon_blades_talent) and checkboxon(opt_fel_rush) spell(fel_rush)
 #felblade,if=movement.distance>15|buff.out_of_range.up
 if target.distance() > 15 or not target.inrange() spell(felblade)
 #fel_rush,if=movement.distance>15|(buff.out_of_range.up&!talent.momentum.enabled)
 if { target.distance() > 15 or not target.inrange() and not hastalent(momentum_talent) } and checkboxon(opt_fel_rush) spell(fel_rush)
 #vengeful_retreat,if=movement.distance>15
 if target.distance() > 15 and checkboxon(opt_vengeful_retreat) spell(vengeful_retreat)
 #throw_glaive,if=talent.demon_blades.enabled
 if hastalent(demon_blades_talent) spell(throw_glaive)
}

AddFunction havocnormalmainpostconditions
{
}

AddFunction havocnormalshortcdactions
{
 unless hastalent(momentum_talent) and buffexpires(prepared_buff) and timeincombat() > 1 and checkboxon(opt_vengeful_retreat) and spell(vengeful_retreat) or { waiting_for_momentum() or hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) } and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush)
 {
  #fel_barrage,if=active_enemies>desired_targets|raid_event.adds.in>30
  if enemies() > havocdesiredtargets() or 600 > 30 spell(fel_barrage)

  unless blade_dance() and spell(death_sweep)
  {
   #immolation_aura
   spell(immolation_aura)

   unless not waiting_for_momentum() and { enemies() > havocdesiredtargets() or 600 > 10 } and spell(glaive_tempest) or conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) and spell(throw_glaive)
   {
    #eye_beam,if=!variable.waiting_for_momentum&(active_enemies>desired_targets|raid_event.adds.in>15)
    if not waiting_for_momentum() and { enemies() > havocdesiredtargets() or 600 > 15 } spell(eye_beam)

    unless blade_dance() and spell(blade_dance) or furydeficit() >= 40 and spell(felblade) or { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 or buffremaining(metamorphosis_buff) < 5 } and not pooling_for_blade_dance() and not waiting_for_essence_break() and spell(annihilation) or { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 } and not pooling_for_meta() and not pooling_for_blade_dance() and not waiting_for_essence_break() and spell(chaos_strike_havoc)
    {
     #eye_beam,if=talent.blind_fury.enabled&raid_event.adds.in>cooldown
     if hastalent(blind_fury_talent) and 600 > spellcooldown(eye_beam) spell(eye_beam)
    }
   }
  }
 }
}

AddFunction havocnormalshortcdpostconditions
{
 hastalent(momentum_talent) and buffexpires(prepared_buff) and timeincombat() > 1 and checkboxon(opt_vengeful_retreat) and spell(vengeful_retreat) or { waiting_for_momentum() or hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) } and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush) or blade_dance() and spell(death_sweep) or not waiting_for_momentum() and { enemies() > havocdesiredtargets() or 600 > 10 } and spell(glaive_tempest) or conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) and spell(throw_glaive) or blade_dance() and spell(blade_dance) or furydeficit() >= 40 and spell(felblade) or { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 or buffremaining(metamorphosis_buff) < 5 } and not pooling_for_blade_dance() and not waiting_for_essence_break() and spell(annihilation) or { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 } and not pooling_for_meta() and not pooling_for_blade_dance() and not waiting_for_essence_break() and spell(chaos_strike_havoc) or runeforge(burning_wound_runeforge) and target.debuffremaining(burning_wound_debuff) < 4 and spell(demons_bite) or spell(demons_bite) or not hastalent(momentum_talent) and 600 > charges(fel_rush) * 10 and hastalent(demon_blades_talent) and checkboxon(opt_fel_rush) and spell(fel_rush) or { target.distance() > 15 or not target.inrange() } and spell(felblade) or { target.distance() > 15 or not target.inrange() and not hastalent(momentum_talent) } and checkboxon(opt_fel_rush) and spell(fel_rush) or target.distance() > 15 and checkboxon(opt_vengeful_retreat) and spell(vengeful_retreat) or hastalent(demon_blades_talent) and spell(throw_glaive)
}

AddFunction havocnormalcdactions
{
}

AddFunction havocnormalcdpostconditions
{
 hastalent(momentum_talent) and buffexpires(prepared_buff) and timeincombat() > 1 and checkboxon(opt_vengeful_retreat) and spell(vengeful_retreat) or { waiting_for_momentum() or hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) } and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush) or { enemies() > havocdesiredtargets() or 600 > 30 } and spell(fel_barrage) or blade_dance() and spell(death_sweep) or spell(immolation_aura) or not waiting_for_momentum() and { enemies() > havocdesiredtargets() or 600 > 10 } and spell(glaive_tempest) or conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) and spell(throw_glaive) or not waiting_for_momentum() and { enemies() > havocdesiredtargets() or 600 > 15 } and spell(eye_beam) or blade_dance() and spell(blade_dance) or furydeficit() >= 40 and spell(felblade) or { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 or buffremaining(metamorphosis_buff) < 5 } and not pooling_for_blade_dance() and not waiting_for_essence_break() and spell(annihilation) or { hastalent(demon_blades_talent) or not waiting_for_momentum() or furydeficit() < 30 } and not pooling_for_meta() and not pooling_for_blade_dance() and not waiting_for_essence_break() and spell(chaos_strike_havoc) or hastalent(blind_fury_talent) and 600 > spellcooldown(eye_beam) and spell(eye_beam) or runeforge(burning_wound_runeforge) and target.debuffremaining(burning_wound_debuff) < 4 and spell(demons_bite) or spell(demons_bite) or not hastalent(momentum_talent) and 600 > charges(fel_rush) * 10 and hastalent(demon_blades_talent) and checkboxon(opt_fel_rush) and spell(fel_rush) or { target.distance() > 15 or not target.inrange() } and spell(felblade) or { target.distance() > 15 or not target.inrange() and not hastalent(momentum_talent) } and checkboxon(opt_fel_rush) and spell(fel_rush) or target.distance() > 15 and checkboxon(opt_vengeful_retreat) and spell(vengeful_retreat) or hastalent(demon_blades_talent) and spell(throw_glaive)
}

### actions.essence_break

AddFunction havocessence_breakmainactions
{
 #essence_break,if=fury>=80&(cooldown.blade_dance.ready|!variable.blade_dance)
 if fury() >= 80 and { spellcooldown(blade_dance) <= 0 or not blade_dance() } spell(essence_break)
 #death_sweep,if=variable.blade_dance&debuff.essence_break.up
 if blade_dance() and target.debuffpresent(essence_break_debuff) spell(death_sweep)
 #blade_dance,if=variable.blade_dance&debuff.essence_break.up
 if blade_dance() and target.debuffpresent(essence_break_debuff) spell(blade_dance)
 #annihilation,if=debuff.essence_break.up
 if target.debuffpresent(essence_break_debuff) spell(annihilation)
 #chaos_strike,if=debuff.essence_break.up
 if target.debuffpresent(essence_break_debuff) spell(chaos_strike_havoc)
}

AddFunction havocessence_breakmainpostconditions
{
}

AddFunction havocessence_breakshortcdactions
{
}

AddFunction havocessence_breakshortcdpostconditions
{
 fury() >= 80 and { spellcooldown(blade_dance) <= 0 or not blade_dance() } and spell(essence_break) or blade_dance() and target.debuffpresent(essence_break_debuff) and spell(death_sweep) or blade_dance() and target.debuffpresent(essence_break_debuff) and spell(blade_dance) or target.debuffpresent(essence_break_debuff) and spell(annihilation) or target.debuffpresent(essence_break_debuff) and spell(chaos_strike_havoc)
}

AddFunction havocessence_breakcdactions
{
}

AddFunction havocessence_breakcdpostconditions
{
 fury() >= 80 and { spellcooldown(blade_dance) <= 0 or not blade_dance() } and spell(essence_break) or blade_dance() and target.debuffpresent(essence_break_debuff) and spell(death_sweep) or blade_dance() and target.debuffpresent(essence_break_debuff) and spell(blade_dance) or target.debuffpresent(essence_break_debuff) and spell(annihilation) or target.debuffpresent(essence_break_debuff) and spell(chaos_strike_havoc)
}

### actions.demonic

AddFunction havocdemonicmainactions
{
 #fel_rush,if=(talent.unbound_chaos.enabled&buff.unbound_chaos.up)&(charges=2|(raid_event.movement.in>10&raid_event.adds.in>10))
 if hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) spell(fel_rush)
 #death_sweep,if=variable.blade_dance
 if blade_dance() spell(death_sweep)
 #glaive_tempest,if=active_enemies>desired_targets|raid_event.adds.in>10
 if enemies() > havocdesiredtargets() or 600 > 10 spell(glaive_tempest)
 #throw_glaive,if=conduit.serrated_glaive.enabled&cooldown.eye_beam.remains<6&!buff.metamorphosis.up&!debuff.exposed_wound.up
 if conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) spell(throw_glaive)
 #blade_dance,if=variable.blade_dance&!cooldown.metamorphosis.ready&(cooldown.eye_beam.remains>5|(raid_event.adds.in>cooldown&raid_event.adds.in<25))
 if blade_dance() and not { { not checkboxon(opt_meta_only_during_boss) or isbossfight() } and spellcooldown(metamorphosis) <= 0 } and { spellcooldown(eye_beam) > 5 or 600 > spellcooldown(blade_dance) and 600 < 25 } spell(blade_dance)
 #annihilation,if=!variable.pooling_for_blade_dance
 if not pooling_for_blade_dance() spell(annihilation)
 #felblade,if=fury.deficit>=40
 if furydeficit() >= 40 spell(felblade)
 #chaos_strike,if=!variable.pooling_for_blade_dance&!variable.pooling_for_eye_beam
 if not pooling_for_blade_dance() and not pooling_for_eye_beam() spell(chaos_strike_havoc)
 #fel_rush,if=talent.demon_blades.enabled&!cooldown.eye_beam.ready&(charges=2|(raid_event.movement.in>10&raid_event.adds.in>10))
 if hastalent(demon_blades_talent) and not spellcooldown(eye_beam) <= 0 and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) spell(fel_rush)
 #demons_bite,target_if=min:debuff.burning_wound.remains,if=runeforge.burning_wound&debuff.burning_wound.remains<4
 if runeforge(burning_wound_runeforge) and target.debuffremaining(burning_wound_debuff) < 4 spell(demons_bite)
 #demons_bite
 spell(demons_bite)
 #throw_glaive,if=buff.out_of_range.up
 if not target.inrange() spell(throw_glaive)
 #fel_rush,if=movement.distance>15|buff.out_of_range.up
 if { target.distance() > 15 or not target.inrange() } and checkboxon(opt_fel_rush) spell(fel_rush)
 #vengeful_retreat,if=movement.distance>15
 if target.distance() > 15 and checkboxon(opt_vengeful_retreat) spell(vengeful_retreat)
 #throw_glaive,if=talent.demon_blades.enabled
 if hastalent(demon_blades_talent) spell(throw_glaive)
}

AddFunction havocdemonicmainpostconditions
{
}

AddFunction havocdemonicshortcdactions
{
 unless hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush) or blade_dance() and spell(death_sweep) or { enemies() > havocdesiredtargets() or 600 > 10 } and spell(glaive_tempest) or conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) and spell(throw_glaive)
 {
  #eye_beam,if=raid_event.adds.up|raid_event.adds.in>25
  if never(raid_event_adds_exists) or 600 > 25 spell(eye_beam)

  unless blade_dance() and not { { not checkboxon(opt_meta_only_during_boss) or isbossfight() } and spellcooldown(metamorphosis) <= 0 } and { spellcooldown(eye_beam) > 5 or 600 > spellcooldown(blade_dance) and 600 < 25 } and spell(blade_dance)
  {
   #immolation_aura
   spell(immolation_aura)
  }
 }
}

AddFunction havocdemonicshortcdpostconditions
{
 hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush) or blade_dance() and spell(death_sweep) or { enemies() > havocdesiredtargets() or 600 > 10 } and spell(glaive_tempest) or conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) and spell(throw_glaive) or blade_dance() and not { { not checkboxon(opt_meta_only_during_boss) or isbossfight() } and spellcooldown(metamorphosis) <= 0 } and { spellcooldown(eye_beam) > 5 or 600 > spellcooldown(blade_dance) and 600 < 25 } and spell(blade_dance) or not pooling_for_blade_dance() and spell(annihilation) or furydeficit() >= 40 and spell(felblade) or not pooling_for_blade_dance() and not pooling_for_eye_beam() and spell(chaos_strike_havoc) or hastalent(demon_blades_talent) and not spellcooldown(eye_beam) <= 0 and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush) or runeforge(burning_wound_runeforge) and target.debuffremaining(burning_wound_debuff) < 4 and spell(demons_bite) or spell(demons_bite) or not target.inrange() and spell(throw_glaive) or { target.distance() > 15 or not target.inrange() } and checkboxon(opt_fel_rush) and spell(fel_rush) or target.distance() > 15 and checkboxon(opt_vengeful_retreat) and spell(vengeful_retreat) or hastalent(demon_blades_talent) and spell(throw_glaive)
}

AddFunction havocdemoniccdactions
{
}

AddFunction havocdemoniccdpostconditions
{
 hastalent(unbound_chaos_talent) and buffpresent(unbound_chaos_buff) and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush) or blade_dance() and spell(death_sweep) or { enemies() > havocdesiredtargets() or 600 > 10 } and spell(glaive_tempest) or conduit(serrated_glaive_conduit) and spellcooldown(eye_beam) < 6 and not buffpresent(metamorphosis_buff) and not target.debuffpresent(exposed_wound_debuff) and spell(throw_glaive) or { never(raid_event_adds_exists) or 600 > 25 } and spell(eye_beam) or blade_dance() and not { { not checkboxon(opt_meta_only_during_boss) or isbossfight() } and spellcooldown(metamorphosis) <= 0 } and { spellcooldown(eye_beam) > 5 or 600 > spellcooldown(blade_dance) and 600 < 25 } and spell(blade_dance) or spell(immolation_aura) or not pooling_for_blade_dance() and spell(annihilation) or furydeficit() >= 40 and spell(felblade) or not pooling_for_blade_dance() and not pooling_for_eye_beam() and spell(chaos_strike_havoc) or hastalent(demon_blades_talent) and not spellcooldown(eye_beam) <= 0 and { charges(fel_rush) == 2 or 600 > 10 and 600 > 10 } and checkboxon(opt_fel_rush) and spell(fel_rush) or runeforge(burning_wound_runeforge) and target.debuffremaining(burning_wound_debuff) < 4 and spell(demons_bite) or spell(demons_bite) or not target.inrange() and spell(throw_glaive) or { target.distance() > 15 or not target.inrange() } and checkboxon(opt_fel_rush) and spell(fel_rush) or target.distance() > 15 and checkboxon(opt_vengeful_retreat) and spell(vengeful_retreat) or hastalent(demon_blades_talent) and spell(throw_glaive)
}

### actions.cooldown

AddFunction havoccooldownmainactions
{
}

AddFunction havoccooldownmainpostconditions
{
}

AddFunction havoccooldownshortcdactions
{
 #sinful_brand,if=!dot.sinful_brand.ticking
 if not target.debuffpresent(sinful_brand) spell(sinful_brand)
 #the_hunt,if=!talent.demonic.enabled&!variable.waiting_for_momentum|buff.furious_gaze.up
 if not hastalent(demonic_talent) and not waiting_for_momentum() or buffpresent(furious_gaze_buff) spell(the_hunt)
 #elysian_decree,if=(active_enemies>desired_targets|raid_event.adds.in>30)
 if enemies() > havocdesiredtargets() or 600 > 30 spell(elysian_decree)
}

AddFunction havoccooldownshortcdpostconditions
{
}

AddFunction havoccooldowncdactions
{
 #metamorphosis,if=!(talent.demonic.enabled|variable.pooling_for_meta)&cooldown.eye_beam.remains>20&(!covenant.venthyr.enabled|!dot.sinful_brand.ticking)|fight_remains<25
 if not { hastalent(demonic_talent) or pooling_for_meta() } and spellcooldown(eye_beam) > 20 and { not iscovenant("venthyr") or not target.debuffpresent(sinful_brand) } or fightremains() < 25 spell(metamorphosis)
 #metamorphosis,if=talent.demonic.enabled&(cooldown.eye_beam.remains>20&(!variable.blade_dance|cooldown.blade_dance.remains>gcd.max))&(!covenant.venthyr.enabled|!dot.sinful_brand.ticking)
 if hastalent(demonic_talent) and spellcooldown(eye_beam) > 20 and { not blade_dance() or spellcooldown(blade_dance) > gcd() } and { not iscovenant("venthyr") or not target.debuffpresent(sinful_brand) } spell(metamorphosis)

 unless not target.debuffpresent(sinful_brand) and spell(sinful_brand) or { not hastalent(demonic_talent) and not waiting_for_momentum() or buffpresent(furious_gaze_buff) } and spell(the_hunt)
 {
  #fodder_to_the_flame
  spell(fodder_to_the_flame)

  unless { enemies() > havocdesiredtargets() or 600 > 30 } and spell(elysian_decree)
  {
   #potion,if=buff.metamorphosis.remains>25|fight_remains<60
   if { buffremaining(metamorphosis_buff) > 25 or fightremains() < 60 } and { checkboxon(opt_use_consumables) and target.classification(worldboss) } item(potion_of_phantom_fire_item usable=1)
   #use_items,if=buff.metamorphosis.up
   if buffpresent(metamorphosis_buff) havocuseitemactions()
  }
 }
}

AddFunction havoccooldowncdpostconditions
{
 not target.debuffpresent(sinful_brand) and spell(sinful_brand) or { not hastalent(demonic_talent) and not waiting_for_momentum() or buffpresent(furious_gaze_buff) } and spell(the_hunt) or { enemies() > havocdesiredtargets() or 600 > 30 } and spell(elysian_decree)
}

### actions.default

AddFunction havoc_defaultmainactions
{
 #call_action_list,name=cooldown,if=gcd.remains=0
 if not gcdremaining() > 0 havoccooldownmainactions()

 unless not gcdremaining() > 0 and havoccooldownmainpostconditions()
 {
  #pick_up_fragment,type=demon,if=demon_soul_fragments>0
  if soulfragments() > 0 and soulfragments() > 0 texture(spell_shadow_soulgem text=pickup)
  #pick_up_fragment,if=fury.deficit>=35
  if furydeficit() >= 35 and soulfragments() > 0 texture(spell_shadow_soulgem text=pickup)
  #throw_glaive,if=buff.fel_bombardment.stack=5&(buff.immolation_aura.up|!buff.metamorphosis.up)
  if buffstacks(fel_bombardment_buff) == 5 and { buffpresent(immolation_aura) or not buffpresent(metamorphosis_buff) } spell(throw_glaive)
  #call_action_list,name=essence_break,if=talent.essence_break.enabled&(variable.waiting_for_essence_break|debuff.essence_break.up)
  if hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } havocessence_breakmainactions()

  unless hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } and havocessence_breakmainpostconditions()
  {
   #run_action_list,name=demonic,if=talent.demonic.enabled
   if hastalent(demonic_talent) havocdemonicmainactions()

   unless hastalent(demonic_talent) and havocdemonicmainpostconditions()
   {
    #run_action_list,name=normal
    havocnormalmainactions()
   }
  }
 }
}

AddFunction havoc_defaultmainpostconditions
{
 not gcdremaining() > 0 and havoccooldownmainpostconditions() or hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } and havocessence_breakmainpostconditions() or hastalent(demonic_talent) and havocdemonicmainpostconditions() or havocnormalmainpostconditions()
}

AddFunction havoc_defaultshortcdactions
{
 #auto_attack
 havocgetinmeleerange()
 #call_action_list,name=cooldown,if=gcd.remains=0
 if not gcdremaining() > 0 havoccooldownshortcdactions()

 unless not gcdremaining() > 0 and havoccooldownshortcdpostconditions() or soulfragments() > 0 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or furydeficit() >= 35 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or buffstacks(fel_bombardment_buff) == 5 and { buffpresent(immolation_aura) or not buffpresent(metamorphosis_buff) } and spell(throw_glaive)
 {
  #call_action_list,name=essence_break,if=talent.essence_break.enabled&(variable.waiting_for_essence_break|debuff.essence_break.up)
  if hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } havocessence_breakshortcdactions()

  unless hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } and havocessence_breakshortcdpostconditions()
  {
   #run_action_list,name=demonic,if=talent.demonic.enabled
   if hastalent(demonic_talent) havocdemonicshortcdactions()

   unless hastalent(demonic_talent) and havocdemonicshortcdpostconditions()
   {
    #run_action_list,name=normal
    havocnormalshortcdactions()
   }
  }
 }
}

AddFunction havoc_defaultshortcdpostconditions
{
 not gcdremaining() > 0 and havoccooldownshortcdpostconditions() or soulfragments() > 0 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or furydeficit() >= 35 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or buffstacks(fel_bombardment_buff) == 5 and { buffpresent(immolation_aura) or not buffpresent(metamorphosis_buff) } and spell(throw_glaive) or hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } and havocessence_breakshortcdpostconditions() or hastalent(demonic_talent) and havocdemonicshortcdpostconditions() or havocnormalshortcdpostconditions()
}

AddFunction havoc_defaultcdactions
{
 #variable,name=blade_dance,value=talent.first_blood.enabled|spell_targets.blade_dance1>=(3-(talent.trail_of_ruin.enabled+buff.metamorphosis.up))|runeforge.chaos_theory&buff.chaos_theory.down
 #variable,name=pooling_for_meta,value=!talent.demonic.enabled&cooldown.metamorphosis.remains<6&fury.deficit>30
 #variable,name=pooling_for_blade_dance,value=variable.blade_dance&(fury<75-talent.first_blood.enabled*20)
 #variable,name=pooling_for_eye_beam,value=talent.demonic.enabled&!talent.blind_fury.enabled&cooldown.eye_beam.remains<(gcd.max*2)&fury.deficit>20
 #variable,name=waiting_for_essence_break,value=talent.essence_break.enabled&!variable.pooling_for_blade_dance&!variable.pooling_for_meta&cooldown.essence_break.up
 #variable,name=waiting_for_momentum,value=talent.momentum.enabled&!buff.momentum.up
 #disrupt
 havocinterruptactions()
 #call_action_list,name=cooldown,if=gcd.remains=0
 if not gcdremaining() > 0 havoccooldowncdactions()

 unless not gcdremaining() > 0 and havoccooldowncdpostconditions() or soulfragments() > 0 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or furydeficit() >= 35 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or buffstacks(fel_bombardment_buff) == 5 and { buffpresent(immolation_aura) or not buffpresent(metamorphosis_buff) } and spell(throw_glaive)
 {
  #call_action_list,name=essence_break,if=talent.essence_break.enabled&(variable.waiting_for_essence_break|debuff.essence_break.up)
  if hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } havocessence_breakcdactions()

  unless hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } and havocessence_breakcdpostconditions()
  {
   #run_action_list,name=demonic,if=talent.demonic.enabled
   if hastalent(demonic_talent) havocdemoniccdactions()

   unless hastalent(demonic_talent) and havocdemoniccdpostconditions()
   {
    #run_action_list,name=normal
    havocnormalcdactions()
   }
  }
 }
}

AddFunction havoc_defaultcdpostconditions
{
 not gcdremaining() > 0 and havoccooldowncdpostconditions() or soulfragments() > 0 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or furydeficit() >= 35 and soulfragments() > 0 and texture(spell_shadow_soulgem text=pickup) or buffstacks(fel_bombardment_buff) == 5 and { buffpresent(immolation_aura) or not buffpresent(metamorphosis_buff) } and spell(throw_glaive) or hastalent(essence_break_talent) and { waiting_for_essence_break() or target.debuffpresent(essence_break_debuff) } and havocessence_breakcdpostconditions() or hastalent(demonic_talent) and havocdemoniccdpostconditions() or havocnormalcdpostconditions()
}

### Havoc icons.

AddCheckBox(opt_demonhunter_havoc_aoe l(aoe) default enabled=(specialization(havoc)))

AddIcon enabled=(not checkboxon(opt_demonhunter_havoc_aoe) and specialization(havoc)) enemies=1 help=shortcd
{
 if not incombat() havocprecombatshortcdactions()
 havoc_defaultshortcdactions()
}

AddIcon enabled=(checkboxon(opt_demonhunter_havoc_aoe) and specialization(havoc)) help=shortcd
{
 if not incombat() havocprecombatshortcdactions()
 havoc_defaultshortcdactions()
}

AddIcon enabled=(specialization(havoc)) enemies=1 help=main
{
 if not incombat() havocprecombatmainactions()
 havoc_defaultmainactions()
}

AddIcon enabled=(checkboxon(opt_demonhunter_havoc_aoe) and specialization(havoc)) help=aoe
{
 if not incombat() havocprecombatmainactions()
 havoc_defaultmainactions()
}

AddIcon enabled=(not checkboxon(opt_demonhunter_havoc_aoe) and specialization(havoc)) enemies=1 help=cd
{
 if not incombat() havocprecombatcdactions()
 havoc_defaultcdactions()
}

AddIcon enabled=(checkboxon(opt_demonhunter_havoc_aoe) and specialization(havoc)) help=cd
{
 if not incombat() havocprecombatcdactions()
 havoc_defaultcdactions()
}

### Required symbols
# annihilation
# blade_dance
# blind_fury_talent
# burning_wound_debuff
# burning_wound_runeforge
# chaos_blades
# chaos_nova
# chaos_strike
# chaos_strike_havoc
# chaos_theory_runeforge
# death_sweep
# demon_blades_talent
# demonic_talent
# demons_bite
# disrupt
# elysian_decree
# essence_break
# essence_break_debuff
# essence_break_talent
# exposed_wound_debuff
# eye_beam
# fel_barrage
# fel_bombardment_buff
# fel_eruption
# fel_rush
# felblade
# first_blood_talent
# fodder_to_the_flame
# furious_gaze_buff
# glaive_tempest
# immolation_aura
# imprison
# metamorphosis
# metamorphosis_buff
# momentum_buff
# momentum_talent
# potion_of_phantom_fire_item
# prepared_buff
# serrated_glaive_conduit
# sinful_brand
# the_hunt
# throw_glaive
# trail_of_ruin_talent
# unbound_chaos_buff
# unbound_chaos_talent
# vengeful_retreat
`;
        OvaleScripts.RegisterScript(
            "DEMONHUNTER",
            "havoc",
            name,
            desc,
            code,
            "script"
        );
    }

    {
        const name = "sc_t26_demon_hunter_vengeance";
        const desc = "[9.0] Simulationcraft: T26_Demon_Hunter_Vengeance";
        const code = `
# Based on SimulationCraft profile "T26_Demon_Hunter_Vengeance".
#	class=demonhunter
#	spec=vengeance
#	talents=1233321

Include(ovale_common)
Include(ovale_demonhunter_spells)


AddFunction brand_build
{
 hastalent(agonizing_flames_talent) and hastalent(burning_alive_talent) and hastalent(charred_flesh_talent)
}

AddCheckBox(opt_interrupt l(interrupt) default enabled=(specialization(vengeance)))
AddCheckBox(opt_melee_range l(not_in_melee_range) enabled=(specialization(vengeance)))
AddCheckBox(opt_use_consumables l(opt_use_consumables) default enabled=(specialization(vengeance)))

AddFunction vengeanceinterruptactions
{
 if checkboxon(opt_interrupt) and not target.isfriend() and target.casting()
 {
  if target.inrange(disrupt) and target.isinterruptible() spell(disrupt)
  if target.isinterruptible() and not target.classification(worldboss) and not sigilcharging(silence misery chains) and target.remainingcasttime() >= 2 - talent(quickened_sigils_talent) + gcdremaining() spell(sigil_of_silence)
  if not target.classification(worldboss) and not sigilcharging(silence misery chains) and target.remainingcasttime() >= 2 - talent(quickened_sigils_talent) + gcdremaining() spell(sigil_of_misery)
  if not target.classification(worldboss) and not sigilcharging(silence misery chains) and target.remainingcasttime() >= 2 - talent(quickened_sigils_talent) + gcdremaining() spell(sigil_of_chains)
  if target.inrange(imprison) and not target.classification(worldboss) and target.creaturetype(demon humanoid beast) spell(imprison)
 }
}

AddFunction vengeanceuseitemactions
{
 item(trinket0slot text=13 usable=1)
 item(trinket1slot text=14 usable=1)
}

AddFunction vengeancegetinmeleerange
{
 if checkboxon(opt_melee_range) and not target.inrange(shear) texture(misc_arrowlup help=(l(not_in_melee_range)))
}

### actions.precombat

AddFunction vengeanceprecombatmainactions
{
}

AddFunction vengeanceprecombatmainpostconditions
{
}

AddFunction vengeanceprecombatshortcdactions
{
}

AddFunction vengeanceprecombatshortcdpostconditions
{
}

AddFunction vengeanceprecombatcdactions
{
 #flask
 #augmentation
 #food
 #snapshot_stats
 #potion
 if checkboxon(opt_use_consumables) and target.classification(worldboss) item(potion_of_phantom_fire_item usable=1)
 #use_item,name=azsharas_font_of_power
 vengeanceuseitemactions()
}

AddFunction vengeanceprecombatcdpostconditions
{
}

### actions.normal

AddFunction vengeancenormalmainactions
{
 #infernal_strike
 spell(infernal_strike)
 #spirit_bomb,if=((buff.metamorphosis.up&talent.fracture.enabled&soul_fragments>=3)|soul_fragments>=4)
 if buffpresent(metamorphosis_vengeance) and hastalent(fracture_talent) and soulfragments() >= 3 or soulfragments() >= 4 spell(spirit_bomb)
 #soul_cleave,if=((talent.spirit_bomb.enabled&soul_fragments=0)|!talent.spirit_bomb.enabled)&((talent.fracture.enabled&fury>=55)|(!talent.fracture.enabled&fury>=70)|cooldown.fel_devastation.remains>target.time_to_die|(buff.metamorphosis.up&((talent.fracture.enabled&fury>=35)|(!talent.fracture.enabled&fury>=50))))
 if { hastalent(spirit_bomb_talent) and soulfragments() == 0 or not hastalent(spirit_bomb_talent) } and { hastalent(fracture_talent) and fury() >= 55 or not hastalent(fracture_talent) and fury() >= 70 or spellcooldown(fel_devastation) > target.timetodie() or buffpresent(metamorphosis_vengeance) and { hastalent(fracture_talent) and fury() >= 35 or not hastalent(fracture_talent) and fury() >= 50 } } spell(soul_cleave)
 #felblade,if=fury<=60
 if fury() <= 60 spell(felblade)
 #fracture,if=((talent.spirit_bomb.enabled&soul_fragments<=3)|(!talent.spirit_bomb.enabled&((buff.metamorphosis.up&fury<=55)|(buff.metamorphosis.down&fury<=70))))
 if hastalent(spirit_bomb_talent) and soulfragments() <= 3 or not hastalent(spirit_bomb_talent) and { buffpresent(metamorphosis_vengeance) and fury() <= 55 or buffexpires(metamorphosis_vengeance) and fury() <= 70 } spell(fracture)
 #shear
 spell(shear)
 #throw_glaive
 spell(throw_glaive_vengeance)
}

AddFunction vengeancenormalmainpostconditions
{
}

AddFunction vengeancenormalshortcdactions
{
 unless spell(infernal_strike)
 {
  #bulk_extraction
  spell(bulk_extraction)

  unless { buffpresent(metamorphosis_vengeance) and hastalent(fracture_talent) and soulfragments() >= 3 or soulfragments() >= 4 } and spell(spirit_bomb)
  {
   #fel_devastation
   spell(fel_devastation)

   unless { hastalent(spirit_bomb_talent) and soulfragments() == 0 or not hastalent(spirit_bomb_talent) } and { hastalent(fracture_talent) and fury() >= 55 or not hastalent(fracture_talent) and fury() >= 70 or spellcooldown(fel_devastation) > target.timetodie() or buffpresent(metamorphosis_vengeance) and { hastalent(fracture_talent) and fury() >= 35 or not hastalent(fracture_talent) and fury() >= 50 } } and spell(soul_cleave)
   {
    #immolation_aura,if=((variable.brand_build&cooldown.fiery_brand.remains>10)|!variable.brand_build)&fury<=90
    if { brand_build() and spellcooldown(fiery_brand) > 10 or not brand_build() } and fury() <= 90 spell(immolation_aura)

    unless fury() <= 60 and spell(felblade) or { hastalent(spirit_bomb_talent) and soulfragments() <= 3 or not hastalent(spirit_bomb_talent) and { buffpresent(metamorphosis_vengeance) and fury() <= 55 or buffexpires(metamorphosis_vengeance) and fury() <= 70 } } and spell(fracture)
    {
     #sigil_of_flame,if=!(covenant.kyrian.enabled&runeforge.razelikhs_defilement)
     if not { iscovenant("kyrian") and runeforge(razelikhs_defilement_runeforge) } spell(sigil_of_flame)
    }
   }
  }
 }
}

AddFunction vengeancenormalshortcdpostconditions
{
 spell(infernal_strike) or { buffpresent(metamorphosis_vengeance) and hastalent(fracture_talent) and soulfragments() >= 3 or soulfragments() >= 4 } and spell(spirit_bomb) or { hastalent(spirit_bomb_talent) and soulfragments() == 0 or not hastalent(spirit_bomb_talent) } and { hastalent(fracture_talent) and fury() >= 55 or not hastalent(fracture_talent) and fury() >= 70 or spellcooldown(fel_devastation) > target.timetodie() or buffpresent(metamorphosis_vengeance) and { hastalent(fracture_talent) and fury() >= 35 or not hastalent(fracture_talent) and fury() >= 50 } } and spell(soul_cleave) or fury() <= 60 and spell(felblade) or { hastalent(spirit_bomb_talent) and soulfragments() <= 3 or not hastalent(spirit_bomb_talent) and { buffpresent(metamorphosis_vengeance) and fury() <= 55 or buffexpires(metamorphosis_vengeance) and fury() <= 70 } } and spell(fracture) or spell(shear) or spell(throw_glaive_vengeance)
}

AddFunction vengeancenormalcdactions
{
}

AddFunction vengeancenormalcdpostconditions
{
 spell(infernal_strike) or spell(bulk_extraction) or { buffpresent(metamorphosis_vengeance) and hastalent(fracture_talent) and soulfragments() >= 3 or soulfragments() >= 4 } and spell(spirit_bomb) or spell(fel_devastation) or { hastalent(spirit_bomb_talent) and soulfragments() == 0 or not hastalent(spirit_bomb_talent) } and { hastalent(fracture_talent) and fury() >= 55 or not hastalent(fracture_talent) and fury() >= 70 or spellcooldown(fel_devastation) > target.timetodie() or buffpresent(metamorphosis_vengeance) and { hastalent(fracture_talent) and fury() >= 35 or not hastalent(fracture_talent) and fury() >= 50 } } and spell(soul_cleave) or { brand_build() and spellcooldown(fiery_brand) > 10 or not brand_build() } and fury() <= 90 and spell(immolation_aura) or fury() <= 60 and spell(felblade) or { hastalent(spirit_bomb_talent) and soulfragments() <= 3 or not hastalent(spirit_bomb_talent) and { buffpresent(metamorphosis_vengeance) and fury() <= 55 or buffexpires(metamorphosis_vengeance) and fury() <= 70 } } and spell(fracture) or not { iscovenant("kyrian") and runeforge(razelikhs_defilement_runeforge) } and spell(sigil_of_flame) or spell(shear) or spell(throw_glaive_vengeance)
}

### actions.defensives

AddFunction vengeancedefensivesmainactions
{
 #demon_spikes
 spell(demon_spikes)
}

AddFunction vengeancedefensivesmainpostconditions
{
}

AddFunction vengeancedefensivesshortcdactions
{
 unless spell(demon_spikes)
 {
  #fiery_brand
  spell(fiery_brand)
 }
}

AddFunction vengeancedefensivesshortcdpostconditions
{
 spell(demon_spikes)
}

AddFunction vengeancedefensivescdactions
{
 unless spell(demon_spikes)
 {
  #metamorphosis,if=!buff.metamorphosis.up&(!covenant.venthyr.enabled|!dot.sinful_brand.ticking)|target.time_to_die<15
  if not buffpresent(metamorphosis_vengeance) and { not iscovenant("venthyr") or not target.debuffpresent(sinful_brand) } or target.timetodie() < 15 spell(metamorphosis_vengeance)
 }
}

AddFunction vengeancedefensivescdpostconditions
{
 spell(demon_spikes) or spell(fiery_brand)
}

### actions.cooldowns

AddFunction vengeancecooldownsmainactions
{
}

AddFunction vengeancecooldownsmainpostconditions
{
}

AddFunction vengeancecooldownsshortcdactions
{
 #sinful_brand,if=!dot.sinful_brand.ticking
 if not target.debuffpresent(sinful_brand) spell(sinful_brand)
 #the_hunt
 spell(the_hunt)
 #elysian_decree
 spell(elysian_decree)
}

AddFunction vengeancecooldownsshortcdpostconditions
{
}

AddFunction vengeancecooldownscdactions
{
 #potion
 if checkboxon(opt_use_consumables) and target.classification(worldboss) item(potion_of_phantom_fire_item usable=1)
 #use_items
 vengeanceuseitemactions()

 unless not target.debuffpresent(sinful_brand) and spell(sinful_brand) or spell(the_hunt)
 {
  #fodder_to_the_flame
  spell(fodder_to_the_flame)
 }
}

AddFunction vengeancecooldownscdpostconditions
{
 not target.debuffpresent(sinful_brand) and spell(sinful_brand) or spell(the_hunt) or spell(elysian_decree)
}

### actions.brand

AddFunction vengeancebrandmainactions
{
}

AddFunction vengeancebrandmainpostconditions
{
}

AddFunction vengeancebrandshortcdactions
{
 #fiery_brand
 spell(fiery_brand)
 #immolation_aura,if=dot.fiery_brand.ticking
 if target.debuffpresent(fiery_brand_debuff) spell(immolation_aura)
}

AddFunction vengeancebrandshortcdpostconditions
{
}

AddFunction vengeancebrandcdactions
{
}

AddFunction vengeancebrandcdpostconditions
{
 spell(fiery_brand) or target.debuffpresent(fiery_brand_debuff) and spell(immolation_aura)
}

### actions.default

AddFunction vengeance_defaultmainactions
{
 #consume_magic
 if target.hasdebufftype(magic) spell(consume_magic)
 #throw_glaive,if=buff.fel_bombardment.stack=5&(buff.immolation_aura.up|!buff.metamorphosis.up)
 if buffstacks(fel_bombardment_buff) == 5 and { buffpresent(immolation_aura) or not buffpresent(metamorphosis_vengeance) } spell(throw_glaive_vengeance)
 #call_action_list,name=brand,if=variable.brand_build
 if brand_build() vengeancebrandmainactions()

 unless brand_build() and vengeancebrandmainpostconditions()
 {
  #call_action_list,name=defensives
  vengeancedefensivesmainactions()

  unless vengeancedefensivesmainpostconditions()
  {
   #call_action_list,name=cooldowns
   vengeancecooldownsmainactions()

   unless vengeancecooldownsmainpostconditions()
   {
    #call_action_list,name=normal
    vengeancenormalmainactions()
   }
  }
 }
}

AddFunction vengeance_defaultmainpostconditions
{
 brand_build() and vengeancebrandmainpostconditions() or vengeancedefensivesmainpostconditions() or vengeancecooldownsmainpostconditions() or vengeancenormalmainpostconditions()
}

AddFunction vengeance_defaultshortcdactions
{
 #auto_attack
 vengeancegetinmeleerange()

 unless target.hasdebufftype(magic) and spell(consume_magic) or buffstacks(fel_bombardment_buff) == 5 and { buffpresent(immolation_aura) or not buffpresent(metamorphosis_vengeance) } and spell(throw_glaive_vengeance)
 {
  #call_action_list,name=brand,if=variable.brand_build
  if brand_build() vengeancebrandshortcdactions()

  unless brand_build() and vengeancebrandshortcdpostconditions()
  {
   #call_action_list,name=defensives
   vengeancedefensivesshortcdactions()

   unless vengeancedefensivesshortcdpostconditions()
   {
    #call_action_list,name=cooldowns
    vengeancecooldownsshortcdactions()

    unless vengeancecooldownsshortcdpostconditions()
    {
     #call_action_list,name=normal
     vengeancenormalshortcdactions()
    }
   }
  }
 }
}

AddFunction vengeance_defaultshortcdpostconditions
{
 target.hasdebufftype(magic) and spell(consume_magic) or buffstacks(fel_bombardment_buff) == 5 and { buffpresent(immolation_aura) or not buffpresent(metamorphosis_vengeance) } and spell(throw_glaive_vengeance) or brand_build() and vengeancebrandshortcdpostconditions() or vengeancedefensivesshortcdpostconditions() or vengeancecooldownsshortcdpostconditions() or vengeancenormalshortcdpostconditions()
}

AddFunction vengeance_defaultcdactions
{
 #variable,name=brand_build,value=talent.agonizing_flames.enabled&talent.burning_alive.enabled&talent.charred_flesh.enabled
 #disrupt
 vengeanceinterruptactions()

 unless target.hasdebufftype(magic) and spell(consume_magic) or buffstacks(fel_bombardment_buff) == 5 and { buffpresent(immolation_aura) or not buffpresent(metamorphosis_vengeance) } and spell(throw_glaive_vengeance)
 {
  #call_action_list,name=brand,if=variable.brand_build
  if brand_build() vengeancebrandcdactions()

  unless brand_build() and vengeancebrandcdpostconditions()
  {
   #call_action_list,name=defensives
   vengeancedefensivescdactions()

   unless vengeancedefensivescdpostconditions()
   {
    #call_action_list,name=cooldowns
    vengeancecooldownscdactions()

    unless vengeancecooldownscdpostconditions()
    {
     #call_action_list,name=normal
     vengeancenormalcdactions()
    }
   }
  }
 }
}

AddFunction vengeance_defaultcdpostconditions
{
 target.hasdebufftype(magic) and spell(consume_magic) or buffstacks(fel_bombardment_buff) == 5 and { buffpresent(immolation_aura) or not buffpresent(metamorphosis_vengeance) } and spell(throw_glaive_vengeance) or brand_build() and vengeancebrandcdpostconditions() or vengeancedefensivescdpostconditions() or vengeancecooldownscdpostconditions() or vengeancenormalcdpostconditions()
}

### Vengeance icons.

AddCheckBox(opt_demonhunter_vengeance_aoe l(aoe) default enabled=(specialization(vengeance)))

AddIcon enabled=(not checkboxon(opt_demonhunter_vengeance_aoe) and specialization(vengeance)) enemies=1 help=shortcd
{
 if not incombat() vengeanceprecombatshortcdactions()
 vengeance_defaultshortcdactions()
}

AddIcon enabled=(checkboxon(opt_demonhunter_vengeance_aoe) and specialization(vengeance)) help=shortcd
{
 if not incombat() vengeanceprecombatshortcdactions()
 vengeance_defaultshortcdactions()
}

AddIcon enabled=(specialization(vengeance)) enemies=1 help=main
{
 if not incombat() vengeanceprecombatmainactions()
 vengeance_defaultmainactions()
}

AddIcon enabled=(checkboxon(opt_demonhunter_vengeance_aoe) and specialization(vengeance)) help=aoe
{
 if not incombat() vengeanceprecombatmainactions()
 vengeance_defaultmainactions()
}

AddIcon enabled=(not checkboxon(opt_demonhunter_vengeance_aoe) and specialization(vengeance)) enemies=1 help=cd
{
 if not incombat() vengeanceprecombatcdactions()
 vengeance_defaultcdactions()
}

AddIcon enabled=(checkboxon(opt_demonhunter_vengeance_aoe) and specialization(vengeance)) help=cd
{
 if not incombat() vengeanceprecombatcdactions()
 vengeance_defaultcdactions()
}

### Required symbols
# agonizing_flames_talent
# bulk_extraction
# burning_alive_talent
# charred_flesh_talent
# consume_magic
# demon_spikes
# disrupt
# elysian_decree
# fel_bombardment_buff
# fel_devastation
# felblade
# fiery_brand
# fiery_brand_debuff
# fodder_to_the_flame
# fracture
# fracture_talent
# immolation_aura
# imprison
# infernal_strike
# metamorphosis_vengeance
# potion_of_phantom_fire_item
# razelikhs_defilement_runeforge
# shear
# sigil_of_chains
# sigil_of_flame
# sigil_of_misery
# sigil_of_silence
# sinful_brand
# soul_cleave
# spirit_bomb
# spirit_bomb_talent
# the_hunt
# throw_glaive_vengeance
`;
        OvaleScripts.RegisterScript(
            "DEMONHUNTER",
            "vengeance",
            name,
            desc,
            code,
            "script"
        );
    }
}
