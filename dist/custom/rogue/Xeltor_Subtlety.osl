local __exports = LibStub:GetLibrary("ovale/scripts/ovale_rogue")
if not __exports then return end
__exports.registerRogueSubtletyXeltor = function(OvaleScripts)
do
	local name = "xeltor_shanky"
	local desc = "[Xel][8.3] Blush: Shanky"
	local code = [[
Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_rogue_spells)

# Subtlety (Shanky)
AddIcon specialization=3 help=main
{
	if not mounted() and not Stealthed() and not InCombat() and not Dead() and not PlayerIsResting()
	{
		unless target.Present() and target.Distance(less 5)
		{
			if Speed() > 0 Spell(stealth)
		}
	}
	if not InCombat() and target.Present() and target.Exists() and not target.IsFriend() and not mounted() and not Dead()
	{
		if target.InRange(marked_for_death) and Stealthed() and not BuffPresent(cold_blood) Spell(cold_blood)
		#marked_for_death
		if target.InRange(marked_for_death) and ComboPoints() < 5 Spell(marked_for_death)
	}

	if InCombat() InterruptActions()
	if { HealthPercent() <= 25 or HealthPercent() < 70 and not InCombat() and not mounted() } and not Dead() and Energy() > 24 Spell(crimson_vial)

	if target.InRange(backstab) and not target.DebuffPresent(crowd_control_debuff)
	{
		# Cooldowns
		if boss() defaultcdactions()

		# Short Cooldowns
		defaultshortcdactions()

		# Default Actions
		defaultmainactions()
	}

	if InCombat() and not target.IsDead() and not target.IsFriend() and Falling() and { target.HealthPercent() < 100 or target.istargetingplayer() } GetInMeleeRange()
}

AddFunction GetInMeleeRange
{
	if not target.InRange(kick)
	{
		if target.InRange(shadowstrike) and Stealthed() Spell(shadowstrike)
		if target.InRange(shadowstrike) and { Energy() >= 32 and Talent(shadow_focus_talent) or Energy() >= 40 } and not Stealthed() AcquireStealth()
		if target.InRange(shadowstep) Spell(shadowstep)
	}
}

AddFunction InterruptActions
{
	if { target.HasManagedInterrupts() and target.MustBeInterrupted() } or { not target.HasManagedInterrupts() and target.IsInterruptible() }
	{
		if target.inrange(kick) and target.isinterruptible() and target.remainingcasttime() <= casttime(kick) + gcd() spell(kick)
	  if target.inrange(cheap_shot) and not target.classification(worldboss) and target.remainingcasttime() <= casttime(cheap_shot) + gcd() spell(cheap_shot)
	  if target.inrange(kidney_shot) and not target.classification(worldboss) and combopoints() >= 1 and target.remainingcasttime() <= casttime(kidney_shot) + gcd() spell(kidney_shot)
	  if target.inrange(quaking_palm) and not target.classification(worldboss) and target.remainingcasttime() <= casttime(quaking_palm) + gcd() spell(quaking_palm)
	  if target.inrange(blind) and not target.classification(worldboss) and target.remainingcasttime() <= casttime(blind) + gcd() spell(blind)
	}
}

AddFunction AcquireStealth
{
	if not InCombat() Spell(stealth)
}

AddFunction VanishAllowed
{
	{ not target.istargetingplayer() or { unitinparty() and PartyMemberCount() >= 5 } or unitinraid() }
}

AddFunction SubtletyUseItemActions
{
 if Item(Trinket0Slot usable=1) Texture(inv_jewelry_talisman_12)
 if Item(Trinket1Slot usable=1) Texture(inv_jewelry_talisman_12)
}

AddFunction shd_threshold
{
 spellcharges(shadow_dance count=0) >= 1.75
}

AddFunction shd_combo_points
{
 if use_priority_rotation() and { hastalent(nightstalker_talent) or hastalent(dark_shadow_talent) } combopointsdeficit() <= 1 + 2 * hasazeritetrait(the_first_dance_trait)
 combopointsdeficit() >= 4 - { hastalent(deeper_stratagem_talent) and hasazeritetrait(the_first_dance_trait) and not hastalent(dark_shadow_talent) and not hastalent(subterfuge_talent) and enemies(tagged=1) < 3 }
}

AddFunction use_priority_rotation
{
 enemies(tagged=1) >= 2
}

AddFunction stealth_threshold
{
 25 + talentpoints(vigor_talent) * 35 + talentpoints(master_of_shadows_talent) * 25 + talentpoints(shadow_focus_talent) * 20 + talentpoints(alacrity_talent) * 10 + 15 * { enemies(tagged=1) >= 3 }
}

### actions.default

AddFunction defaultmainactions
{
 #call_action_list,name=cds
 subtletycdsmainactions()

 unless subtletycdsmainpostconditions()
 {
  #run_action_list,name=stealthed,if=stealthed.all
  if stealthed() subtletystealthedmainactions()

  unless stealthed() and subtletystealthedmainpostconditions()
  {
   #nightblade,if=target.time_to_die>6&remains<gcd.max&combo_points>=4-(time<10)*2
   if target.timetodie() > 6 and target.debuffremaining(nightblade_debuff) < gcd() and combopoints() >= 4 - { timeincombat() < 10 } * 2 and target.inrange(nightblade) spell(nightblade)
   #variable,name=use_priority_rotation,value=priority_rotation&spell_targets.shuriken_storm>=2
   #call_action_list,name=stealth_cds,if=variable.use_priority_rotation
   if use_priority_rotation() cdsmainactions()

   unless use_priority_rotation() and cdsmainpostconditions()
   {
    #variable,name=stealth_threshold,value=25+talent.vigor.enabled*35+talent.master_of_shadows.enabled*25+talent.shadow_focus.enabled*20+talent.alacrity.enabled*10+15*(spell_targets.shuriken_storm>=3)
    #call_action_list,name=stealth_cds,if=energy.deficit<=variable.stealth_threshold
    if energydeficit() <= stealth_threshold() cdsmainactions()

    unless energydeficit() <= stealth_threshold() and cdsmainpostconditions()
    {
     #nightblade,if=azerite.nights_vengeance.enabled&!buff.nights_vengeance.up&combo_points.deficit>1&(spell_targets.shuriken_storm<2|variable.use_priority_rotation)&(cooldown.symbols_of_death.remains<=3|(azerite.nights_vengeance.rank>=2&buff.symbols_of_death.remains>3&!stealthed.all&cooldown.shadow_dance.charges_fractional>=0.9))
     if hasazeritetrait(nights_vengeance_trait) and not buffpresent(nights_vengeance_buff) and combopointsdeficit() > 1 and { enemies(tagged=1) < 2 or use_priority_rotation() } and { spellcooldown(symbols_of_death) <= 3 or azeritetraitrank(nights_vengeance_trait) >= 2 and buffremaining(symbols_of_death_buff) > 3 and not stealthed() and spellcharges(shadow_dance count=0) >= 0.9 } and target.inrange(nightblade) spell(nightblade)
     #call_action_list,name=finish,if=combo_points.deficit<=1|target.time_to_die<=1&combo_points>=3
     if combopointsdeficit() <= 1 or target.timetodie() <= 1 and combopoints() >= 3 subtletyfinishmainactions()

     unless { combopointsdeficit() <= 1 or target.timetodie() <= 1 and combopoints() >= 3 } and subtletyfinishmainpostconditions()
     {
      #call_action_list,name=finish,if=spell_targets.shuriken_storm=4&combo_points>=4
      if enemies(tagged=1) == 4 and combopoints() >= 4 subtletyfinishmainactions()

      unless enemies(tagged=1) == 4 and combopoints() >= 4 and subtletyfinishmainpostconditions()
      {
       #call_action_list,name=build,if=energy.deficit<=variable.stealth_threshold
       if energydeficit() <= stealth_threshold() subtletybuildmainactions()
      }
     }
    }
   }
  }
 }
}

AddFunction defaultmainpostconditions
{
 subtletycdsmainpostconditions() or stealthed() and subtletystealthedmainpostconditions() or use_priority_rotation() and cdsmainpostconditions() or energydeficit() <= stealth_threshold() and cdsmainpostconditions() or { combopointsdeficit() <= 1 or target.timetodie() <= 1 and combopoints() >= 3 } and subtletyfinishmainpostconditions() or enemies(tagged=1) == 4 and combopoints() >= 4 and subtletyfinishmainpostconditions() or energydeficit() <= stealth_threshold() and subtletybuildmainpostconditions()
}

AddFunction defaultshortcdactions
{
 #stealth
 if target.inrange(shadowstep) spell(stealth)
 #call_action_list,name=cds
 subtletycdsshortcdactions()

 unless subtletycdsshortcdpostconditions()
 {
  #run_action_list,name=stealthed,if=stealthed.all
  if stealthed() subtletystealthedshortcdactions()

  unless stealthed() and subtletystealthedshortcdpostconditions() or target.timetodie() > 6 and target.debuffremaining(nightblade_debuff) < gcd() and combopoints() >= 4 - { timeincombat() < 10 } * 2 and target.inrange(nightblade) and spell(nightblade)
  {
   #variable,name=use_priority_rotation,value=priority_rotation&spell_targets.shuriken_storm>=2
   #call_action_list,name=stealth_cds,if=variable.use_priority_rotation
   if use_priority_rotation() cdsshortcdactions()

   unless use_priority_rotation() and cdsshortcdpostconditions()
   {
    #variable,name=stealth_threshold,value=25+talent.vigor.enabled*35+talent.master_of_shadows.enabled*25+talent.shadow_focus.enabled*20+talent.alacrity.enabled*10+15*(spell_targets.shuriken_storm>=3)
    #call_action_list,name=stealth_cds,if=energy.deficit<=variable.stealth_threshold
    if energydeficit() <= stealth_threshold() cdsshortcdactions()

    unless energydeficit() <= stealth_threshold() and cdsshortcdpostconditions() or hasazeritetrait(nights_vengeance_trait) and not buffpresent(nights_vengeance_buff) and combopointsdeficit() > 1 and { enemies(tagged=1) < 2 or use_priority_rotation() } and { spellcooldown(symbols_of_death) <= 3 or azeritetraitrank(nights_vengeance_trait) >= 2 and buffremaining(symbols_of_death_buff) > 3 and not stealthed() and spellcharges(shadow_dance count=0) >= 0.9 } and target.inrange(nightblade) and spell(nightblade)
    {
     #call_action_list,name=finish,if=combo_points.deficit<=1|target.time_to_die<=1&combo_points>=3
     if combopointsdeficit() <= 1 or target.timetodie() <= 1 and combopoints() >= 3 subtletyfinishshortcdactions()

     unless { combopointsdeficit() <= 1 or target.timetodie() <= 1 and combopoints() >= 3 } and subtletyfinishshortcdpostconditions()
     {
      #call_action_list,name=finish,if=spell_targets.shuriken_storm=4&combo_points>=4
      if enemies(tagged=1) == 4 and combopoints() >= 4 subtletyfinishshortcdactions()

      unless enemies(tagged=1) == 4 and combopoints() >= 4 and subtletyfinishshortcdpostconditions()
      {
       #call_action_list,name=build,if=energy.deficit<=variable.stealth_threshold
       if energydeficit() <= stealth_threshold() subtletybuildshortcdactions()

       unless energydeficit() <= stealth_threshold() and subtletybuildshortcdpostconditions()
       {
        #bag_of_tricks
        spell(bag_of_tricks)
       }
      }
     }
    }
   }
  }
 }
}

AddFunction defaultshortcdpostconditions
{
 subtletycdsshortcdpostconditions() or stealthed() and subtletystealthedshortcdpostconditions() or target.timetodie() > 6 and target.debuffremaining(nightblade_debuff) < gcd() and combopoints() >= 4 - { timeincombat() < 10 } * 2 and target.inrange(nightblade) and spell(nightblade) or use_priority_rotation() and cdsshortcdpostconditions() or energydeficit() <= stealth_threshold() and cdsshortcdpostconditions() or hasazeritetrait(nights_vengeance_trait) and not buffpresent(nights_vengeance_buff) and combopointsdeficit() > 1 and { enemies(tagged=1) < 2 or use_priority_rotation() } and { spellcooldown(symbols_of_death) <= 3 or azeritetraitrank(nights_vengeance_trait) >= 2 and buffremaining(symbols_of_death_buff) > 3 and not stealthed() and spellcharges(shadow_dance count=0) >= 0.9 } and target.inrange(nightblade) and spell(nightblade) or { combopointsdeficit() <= 1 or target.timetodie() <= 1 and combopoints() >= 3 } and subtletyfinishshortcdpostconditions() or enemies(tagged=1) == 4 and combopoints() >= 4 and subtletyfinishshortcdpostconditions() or energydeficit() <= stealth_threshold() and subtletybuildshortcdpostconditions()
}

AddFunction defaultcdactions
{
 # subtletyinterruptactions()
 #call_action_list,name=cds
 subtletycdscdactions()

 unless subtletycdscdpostconditions()
 {
  #run_action_list,name=stealthed,if=stealthed.all
  if stealthed() subtletystealthedcdactions()

  unless stealthed() and subtletystealthedcdpostconditions() or target.timetodie() > 6 and target.debuffremaining(nightblade_debuff) < gcd() and combopoints() >= 4 - { timeincombat() < 10 } * 2 and target.inrange(nightblade) and spell(nightblade)
  {
   #variable,name=use_priority_rotation,value=priority_rotation&spell_targets.shuriken_storm>=2
   #call_action_list,name=stealth_cds,if=variable.use_priority_rotation
   if use_priority_rotation() cdscdactions()

   unless use_priority_rotation() and cdscdpostconditions()
   {
    #variable,name=stealth_threshold,value=25+talent.vigor.enabled*35+talent.master_of_shadows.enabled*25+talent.shadow_focus.enabled*20+talent.alacrity.enabled*10+15*(spell_targets.shuriken_storm>=3)
    #call_action_list,name=stealth_cds,if=energy.deficit<=variable.stealth_threshold
    if energydeficit() <= stealth_threshold() cdscdactions()

    unless energydeficit() <= stealth_threshold() and cdscdpostconditions() or hasazeritetrait(nights_vengeance_trait) and not buffpresent(nights_vengeance_buff) and combopointsdeficit() > 1 and { enemies(tagged=1) < 2 or use_priority_rotation() } and { spellcooldown(symbols_of_death) <= 3 or azeritetraitrank(nights_vengeance_trait) >= 2 and buffremaining(symbols_of_death_buff) > 3 and not stealthed() and spellcharges(shadow_dance count=0) >= 0.9 } and target.inrange(nightblade) and spell(nightblade)
    {
     #call_action_list,name=finish,if=combo_points.deficit<=1|target.time_to_die<=1&combo_points>=3
     if combopointsdeficit() <= 1 or target.timetodie() <= 1 and combopoints() >= 3 subtletyfinishcdactions()

     unless { combopointsdeficit() <= 1 or target.timetodie() <= 1 and combopoints() >= 3 } and subtletyfinishcdpostconditions()
     {
      #call_action_list,name=finish,if=spell_targets.shuriken_storm=4&combo_points>=4
      if enemies(tagged=1) == 4 and combopoints() >= 4 subtletyfinishcdactions()

      unless enemies(tagged=1) == 4 and combopoints() >= 4 and subtletyfinishcdpostconditions()
      {
       #call_action_list,name=build,if=energy.deficit<=variable.stealth_threshold
       if energydeficit() <= stealth_threshold() subtletybuildcdactions()

       unless energydeficit() <= stealth_threshold() and subtletybuildcdpostconditions()
       {
        #arcane_torrent,if=energy.deficit>=15+energy.regen
        if energydeficit() >= 15 + energyregenrate() spell(arcane_torrent_energy)
        #arcane_pulse
        spell(arcane_pulse)
        #lights_judgment
        spell(lights_judgment)
       }
      }
     }
    }
   }
  }
 }
}

AddFunction defaultcdpostconditions
{
 subtletycdscdpostconditions() or stealthed() and subtletystealthedcdpostconditions() or target.timetodie() > 6 and target.debuffremaining(nightblade_debuff) < gcd() and combopoints() >= 4 - { timeincombat() < 10 } * 2 and target.inrange(nightblade) and spell(nightblade) or use_priority_rotation() and cdscdpostconditions() or energydeficit() <= stealth_threshold() and cdscdpostconditions() or hasazeritetrait(nights_vengeance_trait) and not buffpresent(nights_vengeance_buff) and combopointsdeficit() > 1 and { enemies(tagged=1) < 2 or use_priority_rotation() } and { spellcooldown(symbols_of_death) <= 3 or azeritetraitrank(nights_vengeance_trait) >= 2 and buffremaining(symbols_of_death_buff) > 3 and not stealthed() and spellcharges(shadow_dance count=0) >= 0.9 } and target.inrange(nightblade) and spell(nightblade) or { combopointsdeficit() <= 1 or target.timetodie() <= 1 and combopoints() >= 3 } and subtletyfinishcdpostconditions() or enemies(tagged=1) == 4 and combopoints() >= 4 and subtletyfinishcdpostconditions() or energydeficit() <= stealth_threshold() and subtletybuildcdpostconditions() or spell(bag_of_tricks)
}

### actions.build

AddFunction subtletybuildmainactions
{
 #shuriken_storm,if=spell_targets>=2+(talent.gloomblade.enabled&azerite.perforate.rank>=2&position_back)
 if enemies(tagged=1) >= 2 + { hastalent(gloomblade_talent) and azeritetraitrank(perforate_trait) >= 2 and true(position_back) } and target.inrange(backstab) spell(shuriken_storm)
 #gloomblade
 spell(gloomblade)
 #backstab
 if target.inrange(backstab) spell(backstab)
}

AddFunction subtletybuildmainpostconditions
{
}

AddFunction subtletybuildshortcdactions
{
}

AddFunction subtletybuildshortcdpostconditions
{
 enemies(tagged=1) >= 2 + { hastalent(gloomblade_talent) and azeritetraitrank(perforate_trait) >= 2 and true(position_back) } and target.inrange(backstab) and spell(shuriken_storm) or spell(gloomblade) or target.inrange(backstab) and spell(backstab)
}

AddFunction subtletybuildcdactions
{
}

AddFunction subtletybuildcdpostconditions
{
 enemies(tagged=1) >= 2 + { hastalent(gloomblade_talent) and azeritetraitrank(perforate_trait) >= 2 and true(position_back) } and target.inrange(backstab) and spell(shuriken_storm) or spell(gloomblade) or target.inrange(backstab) and spell(backstab)
}

### actions.cds

AddFunction subtletycdsmainactions
{
 #call_action_list,name=essences,if=!stealthed.all&dot.nightblade.ticking
 if not stealthed() and target.debuffpresent(nightblade_debuff) subtletyessencesmainactions()
}

AddFunction subtletycdsmainpostconditions
{
 not stealthed() and target.debuffpresent(nightblade_debuff) and subtletyessencesmainpostconditions()
}

AddFunction subtletycdsshortcdactions
{
 #shadow_dance,use_off_gcd=1,if=!buff.shadow_dance.up&buff.shuriken_tornado.up&buff.shuriken_tornado.remains<=3.5
 if not buffpresent(shadow_dance_buff) and buffpresent(shuriken_tornado) and buffremaining(shuriken_tornado) <= 3.5 and target.inrange(shadowstep) spell(shadow_dance)
 #symbols_of_death,use_off_gcd=1,if=buff.shuriken_tornado.up&buff.shuriken_tornado.remains<=3.5
 if buffpresent(shuriken_tornado) and buffremaining(shuriken_tornado) <= 3.5 spell(symbols_of_death)
 #call_action_list,name=essences,if=!stealthed.all&dot.nightblade.ticking
 if not stealthed() and target.debuffpresent(nightblade_debuff) subtletyessencesshortcdactions()

 unless not stealthed() and target.debuffpresent(nightblade_debuff) and subtletyessencesshortcdpostconditions()
 {
  #pool_resource,for_next=1,if=!talent.shadow_focus.enabled
  unless not hastalent(shadow_focus_talent)
  {
   #shuriken_tornado,if=energy>=60&dot.nightblade.ticking&cooldown.symbols_of_death.up&cooldown.shadow_dance.charges>=1
   if energy() >= 60 and target.debuffpresent(nightblade_debuff) and not spellcooldown(symbols_of_death) > 0 and spellcharges(shadow_dance) >= 1 and target.inrange(backstab) spell(shuriken_tornado)
   #symbols_of_death,if=dot.nightblade.ticking&!cooldown.shadow_blades.up&(!talent.shuriken_tornado.enabled|talent.shadow_focus.enabled|cooldown.shuriken_tornado.remains>2)&(!essence.blood_of_the_enemy.major|cooldown.blood_of_the_enemy.remains>2)&(azerite.nights_vengeance.rank<2|buff.nights_vengeance.up)
   if target.debuffpresent(nightblade_debuff) and not { not spellcooldown(shadow_blades) > 0 } and { not hastalent(shuriken_tornado_talent) or hastalent(shadow_focus_talent) or spellcooldown(shuriken_tornado) > 2 } and { not azeriteessenceismajor(blood_of_the_enemy_essence_id) or spellcooldown(blood_of_the_enemy) > 2 } and { azeritetraitrank(nights_vengeance_trait) < 2 or buffpresent(nights_vengeance_buff) } spell(symbols_of_death)
   #marked_for_death,target_if=min:target.time_to_die,if=raid_event.adds.up&(target.time_to_die<combo_points.deficit|!stealthed.all&combo_points.deficit>=cp_max_spend)
   if false(raid_event_adds_exists) and { target.timetodie() < combopointsdeficit() or not stealthed() and combopointsdeficit() >= maxcombopoints() } spell(marked_for_death)
   #marked_for_death,if=raid_event.adds.in>30-raid_event.adds.duration&!stealthed.all&combo_points.deficit>=cp_max_spend
   if 600 > 30 - 10 and not stealthed() and combopointsdeficit() >= maxcombopoints() spell(marked_for_death)
   #shuriken_tornado,if=talent.shadow_focus.enabled&dot.nightblade.ticking&buff.symbols_of_death.up
   if hastalent(shadow_focus_talent) and target.debuffpresent(nightblade_debuff) and buffpresent(symbols_of_death_buff) and target.inrange(backstab) spell(shuriken_tornado)
   #shadow_dance,if=!buff.shadow_dance.up&target.time_to_die<=5+talent.subterfuge.enabled&!raid_event.adds.up
   if not buffpresent(shadow_dance_buff) and target.timetodie() <= 5 + talentpoints(subterfuge_talent) and not false(raid_event_adds_exists) and target.inrange(shadowstep) spell(shadow_dance)
  }
 }
}

AddFunction subtletycdsshortcdpostconditions
{
 not stealthed() and target.debuffpresent(nightblade_debuff) and subtletyessencesshortcdpostconditions()
}

AddFunction subtletycdscdactions
{
 #call_action_list,name=essences,if=!stealthed.all&dot.nightblade.ticking
 if not stealthed() and target.debuffpresent(nightblade_debuff) subtletyessencescdactions()

 unless not stealthed() and target.debuffpresent(nightblade_debuff) and subtletyessencescdpostconditions()
 {
  #pool_resource,for_next=1,if=!talent.shadow_focus.enabled
  unless not hastalent(shadow_focus_talent)
  {
   unless energy() >= 60 and target.debuffpresent(nightblade_debuff) and not spellcooldown(symbols_of_death) > 0 and spellcharges(shadow_dance) >= 1 and target.inrange(backstab) and spell(shuriken_tornado)
   {
    #shadow_blades,if=!stealthed.all&dot.nightblade.ticking&combo_points.deficit>=2
    if not stealthed() and target.debuffpresent(nightblade_debuff) and combopointsdeficit() >= 2 and target.inrange(backstab) spell(shadow_blades)

    unless hastalent(shadow_focus_talent) and target.debuffpresent(nightblade_debuff) and buffpresent(symbols_of_death_buff) and target.inrange(backstab) and spell(shuriken_tornado)
    {
     #potion,if=buff.bloodlust.react|buff.symbols_of_death.up&(buff.shadow_blades.up|cooldown.shadow_blades.remains<=10)
     if { buffpresent(burst_haste_buff any=1) or buffpresent(symbols_of_death_buff) and { buffpresent(shadow_blades_buff) or spellcooldown(shadow_blades) <= 10 } } and checkboxon(opt_use_consumables) and target.classification(worldboss) item(unbridled_fury_item usable=1)
     #blood_fury,if=buff.symbols_of_death.up
     if buffpresent(symbols_of_death_buff) spell(blood_fury_ap)
     #berserking,if=buff.symbols_of_death.up
     if buffpresent(symbols_of_death_buff) spell(berserking)
     #fireblood,if=buff.symbols_of_death.up
     if buffpresent(symbols_of_death_buff) spell(fireblood)
     #ancestral_call,if=buff.symbols_of_death.up
     if buffpresent(symbols_of_death_buff) spell(ancestral_call)
     #use_item,effect_name=cyclotronic_blast,if=!stealthed.all&dot.nightblade.ticking&!buff.symbols_of_death.up&energy.deficit>=30
     if not stealthed() and target.debuffpresent(nightblade_debuff) and not buffpresent(symbols_of_death_buff) and energydeficit() >= 30 subtletyuseitemactions()
     #use_item,name=ashvanes_razor_coral,if=debuff.razor_coral_debuff.down|debuff.conductive_ink_debuff.up&target.health.pct<32&target.health.pct>=30|!debuff.conductive_ink_debuff.up&(debuff.razor_coral_debuff.stack>=25-10*debuff.blood_of_the_enemy.up|target.time_to_die<40)&buff.symbols_of_death.remains>8
     if target.debuffexpires(razor_coral_debuff) or target.debuffpresent(conductive_ink_debuff) and target.healthpercent() < 32 and target.healthpercent() >= 30 or not target.debuffpresent(conductive_ink_debuff) and { target.debuffstacks(razor_coral_debuff) >= 25 - 10 * target.debuffpresent(blood_of_the_enemy) or target.timetodie() < 40 } and buffremaining(symbols_of_death_buff) > 8 subtletyuseitemactions()
     #use_item,name=mydas_talisman
     subtletyuseitemactions()
     #use_items,if=buff.symbols_of_death.up|target.time_to_die<20
     if buffpresent(symbols_of_death_buff) or target.timetodie() < 20 subtletyuseitemactions()
    }
   }
  }
 }
}

AddFunction subtletycdscdpostconditions
{
 not stealthed() and target.debuffpresent(nightblade_debuff) and subtletyessencescdpostconditions() or not { not hastalent(shadow_focus_talent) } and { energy() >= 60 and target.debuffpresent(nightblade_debuff) and not spellcooldown(symbols_of_death) > 0 and spellcharges(shadow_dance) >= 1 and target.inrange(backstab) and spell(shuriken_tornado) or hastalent(shadow_focus_talent) and target.debuffpresent(nightblade_debuff) and buffpresent(symbols_of_death_buff) and target.inrange(backstab) and spell(shuriken_tornado) }
}

### actions.essences

AddFunction subtletyessencesmainactions
{
 #concentrated_flame,if=energy.time_to_max>1&!buff.symbols_of_death.up&(!dot.concentrated_flame_burn.ticking&!action.concentrated_flame.in_flight|full_recharge_time<gcd.max)
 if timetomaxenergy() > 1 and not buffpresent(symbols_of_death_buff) and { not target.debuffpresent(concentrated_flame_burn_debuff) and not inflighttotarget(concentrated_flame_essence) or spellfullrecharge(concentrated_flame_essence) < gcd() } spell(concentrated_flame_essence)
}

AddFunction subtletyessencesmainpostconditions
{
}

AddFunction subtletyessencesshortcdactions
{
 unless timetomaxenergy() > 1 and not buffpresent(symbols_of_death_buff) and { not target.debuffpresent(concentrated_flame_burn_debuff) and not inflighttotarget(concentrated_flame_essence) or spellfullrecharge(concentrated_flame_essence) < gcd() } and spell(concentrated_flame_essence)
 {
  #blood_of_the_enemy,if=!cooldown.shadow_blades.up&cooldown.symbols_of_death.up|target.time_to_die<=10
  if not { not spellcooldown(shadow_blades) > 0 } and not spellcooldown(symbols_of_death) > 0 or target.timetodie() <= 10 spell(blood_of_the_enemy)
  #purifying_blast,if=spell_targets.shuriken_storm>=2|raid_event.adds.in>60
  if enemies(tagged=1) >= 2 or 600 > 60 spell(purifying_blast)
  #the_unbound_force,if=buff.reckless_force.up|buff.reckless_force_counter.stack<10
  if buffpresent(reckless_force_buff) or buffstacks(reckless_force_counter_buff) < 10 spell(the_unbound_force)
  #ripple_in_space
  spell(ripple_in_space_essence)
  #worldvein_resonance,if=cooldown.symbols_of_death.remains<5|target.time_to_die<18
  if spellcooldown(symbols_of_death) < 5 or target.timetodie() < 18 spell(worldvein_resonance_essence)
  #reaping_flames,target_if=target.time_to_die<1.5|((target.health.pct>80|target.health.pct<=20)&(active_enemies=1|variable.reaping_delay>29))|(target.time_to_pct_20>30&(active_enemies=1|variable.reaping_delay>44))
  if target.timetodie() < 1.5 or { target.healthpercent() > 80 or target.healthpercent() <= 20 } and { enemies(tagged=1) == 1 or target.timetodie() > 29 and azeriteessenceismajor(reaping_flames_essence) } or target.timetohealthpercent(20) > 30 and { enemies(tagged=1) == 1 or target.timetodie() > 44 and azeriteessenceismajor(reaping_flames_essence) } spell(reaping_flames_essence)
 }
}

AddFunction subtletyessencesshortcdpostconditions
{
 timetomaxenergy() > 1 and not buffpresent(symbols_of_death_buff) and { not target.debuffpresent(concentrated_flame_burn_debuff) and not inflighttotarget(concentrated_flame_essence) or spellfullrecharge(concentrated_flame_essence) < gcd() } and spell(concentrated_flame_essence)
}

AddFunction subtletyessencescdactions
{
 unless timetomaxenergy() > 1 and not buffpresent(symbols_of_death_buff) and { not target.debuffpresent(concentrated_flame_burn_debuff) and not inflighttotarget(concentrated_flame_essence) or spellfullrecharge(concentrated_flame_essence) < gcd() } and spell(concentrated_flame_essence)
 {
  #guardian_of_azeroth
  spell(guardian_of_azeroth)
  #focused_azerite_beam,if=(spell_targets.shuriken_storm>=2|raid_event.adds.in>60)&!cooldown.symbols_of_death.up&!buff.symbols_of_death.up&energy.deficit>=30
  if { enemies(tagged=1) >= 2 or 600 > 60 } and not { not spellcooldown(symbols_of_death) > 0 } and not buffpresent(symbols_of_death_buff) and energydeficit() >= 30 spell(focused_azerite_beam)

  unless { enemies(tagged=1) >= 2 or 600 > 60 } and spell(purifying_blast) or { buffpresent(reckless_force_buff) or buffstacks(reckless_force_counter_buff) < 10 } and spell(the_unbound_force) or spell(ripple_in_space_essence) or { spellcooldown(symbols_of_death) < 5 or target.timetodie() < 18 } and spell(worldvein_resonance_essence)
  {
   #memory_of_lucid_dreams,if=energy<40&buff.symbols_of_death.up
   if energy() < 40 and buffpresent(symbols_of_death_buff) spell(memory_of_lucid_dreams_essence)
  }
 }
}

AddFunction subtletyessencescdpostconditions
{
 timetomaxenergy() > 1 and not buffpresent(symbols_of_death_buff) and { not target.debuffpresent(concentrated_flame_burn_debuff) and not inflighttotarget(concentrated_flame_essence) or spellfullrecharge(concentrated_flame_essence) < gcd() } and spell(concentrated_flame_essence) or { enemies(tagged=1) >= 2 or 600 > 60 } and spell(purifying_blast) or { buffpresent(reckless_force_buff) or buffstacks(reckless_force_counter_buff) < 10 } and spell(the_unbound_force) or spell(ripple_in_space_essence) or { spellcooldown(symbols_of_death) < 5 or target.timetodie() < 18 } and spell(worldvein_resonance_essence) or { target.timetodie() < 1.5 or { target.healthpercent() > 80 or target.healthpercent() <= 20 } and { enemies(tagged=1) == 1 or target.timetodie() > 29 and azeriteessenceismajor(reaping_flames_essence) } or target.timetohealthpercent(20) > 30 and { enemies(tagged=1) == 1 or target.timetodie() > 44 and azeriteessenceismajor(reaping_flames_essence) } } and spell(reaping_flames_essence)
}

### actions.finish

AddFunction subtletyfinishmainactions
{
 #pool_resource,for_next=1
 #eviscerate,if=buff.nights_vengeance.up&(spell_targets.shuriken_storm<2|variable.use_priority_rotation|!talent.secret_technique.enabled|!cooldown.secret_technique.up)
 if buffpresent(nights_vengeance_buff) and { enemies(tagged=1) < 2 or use_priority_rotation() or not hastalent(secret_technique_talent) or not { not spellcooldown(secret_technique) > 0 } } and target.inrange(eviscerate) spell(eviscerate)
 unless buffpresent(nights_vengeance_buff) and { enemies(tagged=1) < 2 or use_priority_rotation() or not hastalent(secret_technique_talent) or not { not spellcooldown(secret_technique) > 0 } } and target.inrange(eviscerate) and spellusable(eviscerate) and spellcooldown(eviscerate) < timetoenergyfor(eviscerate)
 {
  #nightblade,if=(!talent.dark_shadow.enabled|!buff.shadow_dance.up)&target.time_to_die-remains>6&remains<tick_time*2
  if { not hastalent(dark_shadow_talent) or not buffpresent(shadow_dance_buff) } and target.timetodie() - target.debuffremaining(nightblade_debuff) > 6 and target.debuffremaining(nightblade_debuff) < target.currentticktime(nightblade_debuff) * 2 and target.inrange(nightblade) spell(nightblade)
  #nightblade,cycle_targets=1,if=!variable.use_priority_rotation&spell_targets.shuriken_storm>=2&(azerite.nights_vengeance.enabled|!azerite.replicating_shadows.enabled|spell_targets.shuriken_storm-active_dot.nightblade>=2)&!buff.shadow_dance.up&target.time_to_die>=(5+(2*combo_points))&refreshable
  if not use_priority_rotation() and enemies(tagged=1) >= 2 and { hasazeritetrait(nights_vengeance_trait) or not hasazeritetrait(replicating_shadows_trait) or enemies(tagged=1) - debuffcountonany(nightblade_debuff) >= 2 } and not buffpresent(shadow_dance_buff) and target.timetodie() >= 5 + 2 * combopoints() and target.refreshable(nightblade_debuff) and target.inrange(nightblade) spell(nightblade)
  #nightblade,if=remains<cooldown.symbols_of_death.remains+10&cooldown.symbols_of_death.remains<=5&target.time_to_die-remains>cooldown.symbols_of_death.remains+5
  if target.debuffremaining(nightblade_debuff) < spellcooldown(symbols_of_death) + 10 and spellcooldown(symbols_of_death) <= 5 and target.timetodie() - target.debuffremaining(nightblade_debuff) > spellcooldown(symbols_of_death) + 5 and target.inrange(nightblade) spell(nightblade)
  #eviscerate
  if target.inrange(eviscerate) spell(eviscerate)
 }
}

AddFunction subtletyfinishmainpostconditions
{
}

AddFunction subtletyfinishshortcdactions
{
 #pool_resource,for_next=1
 #eviscerate,if=buff.nights_vengeance.up&(spell_targets.shuriken_storm<2|variable.use_priority_rotation|!talent.secret_technique.enabled|!cooldown.secret_technique.up)
 unless buffpresent(nights_vengeance_buff) and { enemies(tagged=1) < 2 or use_priority_rotation() or not hastalent(secret_technique_talent) or not { not spellcooldown(secret_technique) > 0 } } and target.inrange(eviscerate) and spellusable(eviscerate) and spellcooldown(eviscerate) < timetoenergyfor(eviscerate)
 {
  unless { not hastalent(dark_shadow_talent) or not buffpresent(shadow_dance_buff) } and target.timetodie() - target.debuffremaining(nightblade_debuff) > 6 and target.debuffremaining(nightblade_debuff) < target.currentticktime(nightblade_debuff) * 2 and target.inrange(nightblade) and spell(nightblade) or not use_priority_rotation() and enemies(tagged=1) >= 2 and { hasazeritetrait(nights_vengeance_trait) or not hasazeritetrait(replicating_shadows_trait) or enemies(tagged=1) - debuffcountonany(nightblade_debuff) >= 2 } and not buffpresent(shadow_dance_buff) and target.timetodie() >= 5 + 2 * combopoints() and target.refreshable(nightblade_debuff) and target.inrange(nightblade) and spell(nightblade) or target.debuffremaining(nightblade_debuff) < spellcooldown(symbols_of_death) + 10 and spellcooldown(symbols_of_death) <= 5 and target.timetodie() - target.debuffremaining(nightblade_debuff) > spellcooldown(symbols_of_death) + 5 and target.inrange(nightblade) and spell(nightblade)
  {
   #secret_technique
   if target.inrange(secret_technique) spell(secret_technique)
  }
 }
}

AddFunction subtletyfinishshortcdpostconditions
{
 not { buffpresent(nights_vengeance_buff) and { enemies(tagged=1) < 2 or use_priority_rotation() or not hastalent(secret_technique_talent) or not { not spellcooldown(secret_technique) > 0 } } and target.inrange(eviscerate) and spellusable(eviscerate) and spellcooldown(eviscerate) < timetoenergyfor(eviscerate) } and { { not hastalent(dark_shadow_talent) or not buffpresent(shadow_dance_buff) } and target.timetodie() - target.debuffremaining(nightblade_debuff) > 6 and target.debuffremaining(nightblade_debuff) < target.currentticktime(nightblade_debuff) * 2 and target.inrange(nightblade) and spell(nightblade) or not use_priority_rotation() and enemies(tagged=1) >= 2 and { hasazeritetrait(nights_vengeance_trait) or not hasazeritetrait(replicating_shadows_trait) or enemies(tagged=1) - debuffcountonany(nightblade_debuff) >= 2 } and not buffpresent(shadow_dance_buff) and target.timetodie() >= 5 + 2 * combopoints() and target.refreshable(nightblade_debuff) and target.inrange(nightblade) and spell(nightblade) or target.debuffremaining(nightblade_debuff) < spellcooldown(symbols_of_death) + 10 and spellcooldown(symbols_of_death) <= 5 and target.timetodie() - target.debuffremaining(nightblade_debuff) > spellcooldown(symbols_of_death) + 5 and target.inrange(nightblade) and spell(nightblade) or target.inrange(eviscerate) and spell(eviscerate) }
}

AddFunction subtletyfinishcdactions
{
}

AddFunction subtletyfinishcdpostconditions
{
 buffpresent(nights_vengeance_buff) and { enemies(tagged=1) < 2 or use_priority_rotation() or not hastalent(secret_technique_talent) or not { not spellcooldown(secret_technique) > 0 } } and target.inrange(eviscerate) and spell(eviscerate) or not { buffpresent(nights_vengeance_buff) and { enemies(tagged=1) < 2 or use_priority_rotation() or not hastalent(secret_technique_talent) or not { not spellcooldown(secret_technique) > 0 } } and target.inrange(eviscerate) and spellusable(eviscerate) and spellcooldown(eviscerate) < timetoenergyfor(eviscerate) } and { { not hastalent(dark_shadow_talent) or not buffpresent(shadow_dance_buff) } and target.timetodie() - target.debuffremaining(nightblade_debuff) > 6 and target.debuffremaining(nightblade_debuff) < target.currentticktime(nightblade_debuff) * 2 and target.inrange(nightblade) and spell(nightblade) or not use_priority_rotation() and enemies(tagged=1) >= 2 and { hasazeritetrait(nights_vengeance_trait) or not hasazeritetrait(replicating_shadows_trait) or enemies(tagged=1) - debuffcountonany(nightblade_debuff) >= 2 } and not buffpresent(shadow_dance_buff) and target.timetodie() >= 5 + 2 * combopoints() and target.refreshable(nightblade_debuff) and target.inrange(nightblade) and spell(nightblade) or target.debuffremaining(nightblade_debuff) < spellcooldown(symbols_of_death) + 10 and spellcooldown(symbols_of_death) <= 5 and target.timetodie() - target.debuffremaining(nightblade_debuff) > spellcooldown(symbols_of_death) + 5 and target.inrange(nightblade) and spell(nightblade) or target.inrange(secret_technique) and spell(secret_technique) or target.inrange(eviscerate) and spell(eviscerate) }
}

### actions.precombat

AddFunction subtletyprecombatmainactions
{
}

AddFunction subtletyprecombatmainpostconditions
{
}

AddFunction subtletyprecombatshortcdactions
{
 #flask
 #augmentation
 #food
 #snapshot_stats
 #stealth
 if target.inrange(shadowstep) spell(stealth)
 #marked_for_death,precombat_seconds=15
 spell(marked_for_death)
}

AddFunction subtletyprecombatshortcdpostconditions
{
}

AddFunction subtletyprecombatcdactions
{
}

AddFunction subtletyprecombatcdpostconditions
{
}

### actions.stealth_cds

AddFunction cdsmainactions
{
}

AddFunction cdsmainpostconditions
{
}

AddFunction cdsshortcdactions
{
 #variable,name=shd_threshold,value=cooldown.shadow_dance.charges_fractional>=1.75
 #vanish,if=!variable.shd_threshold&combo_points.deficit>1&debuff.find_weakness.remains<1&cooldown.symbols_of_death.remains>=3
 if not shd_threshold() and combopointsdeficit() > 1 and target.debuffremaining(find_weakness_debuff) < 1 and spellcooldown(symbols_of_death) >= 3 and vanishallowed() spell(vanish)
 #pool_resource,for_next=1,extra_amount=40
 #shadowmeld,if=energy>=40&energy.deficit>=10&!variable.shd_threshold&combo_points.deficit>1&debuff.find_weakness.remains<1
 unless energy() >= 40 and energydeficit() >= 10 and not shd_threshold() and combopointsdeficit() > 1 and target.debuffremaining(find_weakness_debuff) < 1 and spellusable(shadowmeld) and spellcooldown(shadowmeld) < timetoenergy(40)
 {
  #variable,name=shd_combo_points,value=combo_points.deficit>=4-(talent.deeper_stratagem.enabled&(azerite.the_first_dance.enabled&!talent.dark_shadow.enabled&!talent.subterfuge.enabled&spell_targets.shuriken_storm<3))
  #variable,name=shd_combo_points,value=combo_points.deficit<=1+2*azerite.the_first_dance.enabled,if=variable.use_priority_rotation&(talent.nightstalker.enabled|talent.dark_shadow.enabled)
  #shadow_dance,if=variable.shd_combo_points&(!talent.dark_shadow.enabled|dot.nightblade.remains>=5+talent.subterfuge.enabled)&(variable.shd_threshold|buff.symbols_of_death.remains>=1.2|spell_targets.shuriken_storm>=4&cooldown.symbols_of_death.remains>10)&(azerite.nights_vengeance.rank<2|buff.nights_vengeance.up)
  if shd_combo_points() and { not hastalent(dark_shadow_talent) or target.debuffremaining(nightblade_debuff) >= 5 + talentpoints(subterfuge_talent) } and { shd_threshold() or buffremaining(symbols_of_death_buff) >= 1.2 or enemies(tagged=1) >= 4 and spellcooldown(symbols_of_death) > 10 } and { azeritetraitrank(nights_vengeance_trait) < 2 or buffpresent(nights_vengeance_buff) } and target.inrange(shadowstep) spell(shadow_dance)
  #shadow_dance,if=variable.shd_combo_points&target.time_to_die<cooldown.symbols_of_death.remains&!raid_event.adds.up
  if shd_combo_points() and target.timetodie() < spellcooldown(symbols_of_death) and not false(raid_event_adds_exists) and target.inrange(shadowstep) spell(shadow_dance)
 }
}

AddFunction cdsshortcdpostconditions
{
}

AddFunction cdscdactions
{
 #pool_resource,for_next=1,extra_amount=40
 #shadowmeld,if=energy>=40&energy.deficit>=10&!variable.shd_threshold&combo_points.deficit>1&debuff.find_weakness.remains<1
 if energy() >= 40 and energydeficit() >= 10 and not shd_threshold() and combopointsdeficit() > 1 and target.debuffremaining(find_weakness_debuff) < 1 spell(shadowmeld)
}

AddFunction cdscdpostconditions
{
}

### actions.stealthed

AddFunction subtletystealthedmainactions
{
 #shadowstrike,if=(talent.find_weakness.enabled|spell_targets.shuriken_storm<3)&(buff.stealth.up|buff.vanish.up)
 if { hastalent(find_weakness_talent) or enemies(tagged=1) < 3 } and { buffpresent(stealthed_buff any=1) or buffpresent(vanish_buff) } and target.inrange(shadowstrike) spell(shadowstrike)
 #call_action_list,name=finish,if=buff.shuriken_tornado.up&combo_points.deficit<=2
 if buffpresent(shuriken_tornado) and combopointsdeficit() <= 2 subtletyfinishmainactions()

 unless buffpresent(shuriken_tornado) and combopointsdeficit() <= 2 and subtletyfinishmainpostconditions()
 {
  #call_action_list,name=finish,if=spell_targets.shuriken_storm=4&combo_points>=4
  if enemies(tagged=1) == 4 and combopoints() >= 4 subtletyfinishmainactions()

  unless enemies(tagged=1) == 4 and combopoints() >= 4 and subtletyfinishmainpostconditions()
  {
   #call_action_list,name=finish,if=combo_points.deficit<=1-(talent.deeper_stratagem.enabled&(buff.vanish.up|azerite.the_first_dance.enabled&!talent.dark_shadow.enabled&!talent.subterfuge.enabled&spell_targets.shuriken_storm<3))
   if combopointsdeficit() <= 1 - { hastalent(deeper_stratagem_talent) and { buffpresent(vanish_buff) or hasazeritetrait(the_first_dance_trait) and not hastalent(dark_shadow_talent) and not hastalent(subterfuge_talent) and enemies(tagged=1) < 3 } } subtletyfinishmainactions()

   unless combopointsdeficit() <= 1 - { hastalent(deeper_stratagem_talent) and { buffpresent(vanish_buff) or hasazeritetrait(the_first_dance_trait) and not hastalent(dark_shadow_talent) and not hastalent(subterfuge_talent) and enemies(tagged=1) < 3 } } and subtletyfinishmainpostconditions()
   {
    #gloomblade,if=azerite.perforate.rank>=2&spell_targets.shuriken_storm<=2&position_back
    if azeritetraitrank(perforate_trait) >= 2 and enemies(tagged=1) <= 2 and true(position_back) spell(gloomblade)
    #shadowstrike,cycle_targets=1,if=talent.secret_technique.enabled&talent.find_weakness.enabled&debuff.find_weakness.remains<1&spell_targets.shuriken_storm=2&target.time_to_die-remains>6
    if hastalent(secret_technique_talent) and hastalent(find_weakness_talent) and target.debuffremaining(find_weakness_debuff) < 1 and enemies(tagged=1) == 2 and target.timetodie() - buffremaining(shadowstrike) > 6 and target.inrange(shadowstrike) spell(shadowstrike)
    #shadowstrike,if=!talent.deeper_stratagem.enabled&azerite.blade_in_the_shadows.rank=3&spell_targets.shuriken_storm=3
    if not hastalent(deeper_stratagem_talent) and azeritetraitrank(blade_in_the_shadows_trait) == 3 and enemies(tagged=1) == 3 and target.inrange(shadowstrike) spell(shadowstrike)
    #shadowstrike,if=variable.use_priority_rotation&(talent.find_weakness.enabled&debuff.find_weakness.remains<1|talent.weaponmaster.enabled&spell_targets.shuriken_storm<=4|azerite.inevitability.enabled&buff.symbols_of_death.up&spell_targets.shuriken_storm<=3+azerite.blade_in_the_shadows.enabled)
    if use_priority_rotation() and { hastalent(find_weakness_talent) and target.debuffremaining(find_weakness_debuff) < 1 or hastalent(weaponmaster_talent) and enemies(tagged=1) <= 4 or hasazeritetrait(inevitability_trait) and buffpresent(symbols_of_death_buff) and enemies(tagged=1) <= 3 + hasazeritetrait(blade_in_the_shadows_trait) } and target.inrange(shadowstrike) spell(shadowstrike)
    #shuriken_storm,if=spell_targets>=3
    if enemies(tagged=1) >= 3 and target.inrange(backstab) spell(shuriken_storm)
    #shadowstrike
    if target.inrange(shadowstrike) spell(shadowstrike)
   }
  }
 }
}

AddFunction subtletystealthedmainpostconditions
{
 buffpresent(shuriken_tornado) and combopointsdeficit() <= 2 and subtletyfinishmainpostconditions() or enemies(tagged=1) == 4 and combopoints() >= 4 and subtletyfinishmainpostconditions() or combopointsdeficit() <= 1 - { hastalent(deeper_stratagem_talent) and { buffpresent(vanish_buff) or hasazeritetrait(the_first_dance_trait) and not hastalent(dark_shadow_talent) and not hastalent(subterfuge_talent) and enemies(tagged=1) < 3 } } and subtletyfinishmainpostconditions()
}

AddFunction subtletystealthedshortcdactions
{
 unless { hastalent(find_weakness_talent) or enemies(tagged=1) < 3 } and { buffpresent(stealthed_buff any=1) or buffpresent(vanish_buff) } and target.inrange(shadowstrike) and spell(shadowstrike)
 {
  #call_action_list,name=finish,if=buff.shuriken_tornado.up&combo_points.deficit<=2
  if buffpresent(shuriken_tornado) and combopointsdeficit() <= 2 subtletyfinishshortcdactions()

  unless buffpresent(shuriken_tornado) and combopointsdeficit() <= 2 and subtletyfinishshortcdpostconditions()
  {
   #call_action_list,name=finish,if=spell_targets.shuriken_storm=4&combo_points>=4
   if enemies(tagged=1) == 4 and combopoints() >= 4 subtletyfinishshortcdactions()

   unless enemies(tagged=1) == 4 and combopoints() >= 4 and subtletyfinishshortcdpostconditions()
   {
    #call_action_list,name=finish,if=combo_points.deficit<=1-(talent.deeper_stratagem.enabled&(buff.vanish.up|azerite.the_first_dance.enabled&!talent.dark_shadow.enabled&!talent.subterfuge.enabled&spell_targets.shuriken_storm<3))
    if combopointsdeficit() <= 1 - { hastalent(deeper_stratagem_talent) and { buffpresent(vanish_buff) or hasazeritetrait(the_first_dance_trait) and not hastalent(dark_shadow_talent) and not hastalent(subterfuge_talent) and enemies(tagged=1) < 3 } } subtletyfinishshortcdactions()
   }
  }
 }
}

AddFunction subtletystealthedshortcdpostconditions
{
 { hastalent(find_weakness_talent) or enemies(tagged=1) < 3 } and { buffpresent(stealthed_buff any=1) or buffpresent(vanish_buff) } and target.inrange(shadowstrike) and spell(shadowstrike) or buffpresent(shuriken_tornado) and combopointsdeficit() <= 2 and subtletyfinishshortcdpostconditions() or enemies(tagged=1) == 4 and combopoints() >= 4 and subtletyfinishshortcdpostconditions() or combopointsdeficit() <= 1 - { hastalent(deeper_stratagem_talent) and { buffpresent(vanish_buff) or hasazeritetrait(the_first_dance_trait) and not hastalent(dark_shadow_talent) and not hastalent(subterfuge_talent) and enemies(tagged=1) < 3 } } and subtletyfinishshortcdpostconditions() or azeritetraitrank(perforate_trait) >= 2 and enemies(tagged=1) <= 2 and true(position_back) and spell(gloomblade) or hastalent(secret_technique_talent) and hastalent(find_weakness_talent) and target.debuffremaining(find_weakness_debuff) < 1 and enemies(tagged=1) == 2 and target.timetodie() - buffremaining(shadowstrike) > 6 and target.inrange(shadowstrike) and spell(shadowstrike) or not hastalent(deeper_stratagem_talent) and azeritetraitrank(blade_in_the_shadows_trait) == 3 and enemies(tagged=1) == 3 and target.inrange(shadowstrike) and spell(shadowstrike) or use_priority_rotation() and { hastalent(find_weakness_talent) and target.debuffremaining(find_weakness_debuff) < 1 or hastalent(weaponmaster_talent) and enemies(tagged=1) <= 4 or hasazeritetrait(inevitability_trait) and buffpresent(symbols_of_death_buff) and enemies(tagged=1) <= 3 + hasazeritetrait(blade_in_the_shadows_trait) } and target.inrange(shadowstrike) and spell(shadowstrike) or enemies(tagged=1) >= 3 and target.inrange(backstab) and spell(shuriken_storm) or target.inrange(shadowstrike) and spell(shadowstrike)
}

AddFunction subtletystealthedcdactions
{
 unless { hastalent(find_weakness_talent) or enemies(tagged=1) < 3 } and { buffpresent(stealthed_buff any=1) or buffpresent(vanish_buff) } and target.inrange(shadowstrike) and spell(shadowstrike)
 {
  #call_action_list,name=finish,if=buff.shuriken_tornado.up&combo_points.deficit<=2
  if buffpresent(shuriken_tornado) and combopointsdeficit() <= 2 subtletyfinishcdactions()

  unless buffpresent(shuriken_tornado) and combopointsdeficit() <= 2 and subtletyfinishcdpostconditions()
  {
   #call_action_list,name=finish,if=spell_targets.shuriken_storm=4&combo_points>=4
   if enemies(tagged=1) == 4 and combopoints() >= 4 subtletyfinishcdactions()

   unless enemies(tagged=1) == 4 and combopoints() >= 4 and subtletyfinishcdpostconditions()
   {
    #call_action_list,name=finish,if=combo_points.deficit<=1-(talent.deeper_stratagem.enabled&(buff.vanish.up|azerite.the_first_dance.enabled&!talent.dark_shadow.enabled&!talent.subterfuge.enabled&spell_targets.shuriken_storm<3))
    if combopointsdeficit() <= 1 - { hastalent(deeper_stratagem_talent) and { buffpresent(vanish_buff) or hasazeritetrait(the_first_dance_trait) and not hastalent(dark_shadow_talent) and not hastalent(subterfuge_talent) and enemies(tagged=1) < 3 } } subtletyfinishcdactions()
   }
  }
 }
}

AddFunction subtletystealthedcdpostconditions
{
 { hastalent(find_weakness_talent) or enemies(tagged=1) < 3 } and { buffpresent(stealthed_buff any=1) or buffpresent(vanish_buff) } and target.inrange(shadowstrike) and spell(shadowstrike) or buffpresent(shuriken_tornado) and combopointsdeficit() <= 2 and subtletyfinishcdpostconditions() or enemies(tagged=1) == 4 and combopoints() >= 4 and subtletyfinishcdpostconditions() or combopointsdeficit() <= 1 - { hastalent(deeper_stratagem_talent) and { buffpresent(vanish_buff) or hasazeritetrait(the_first_dance_trait) and not hastalent(dark_shadow_talent) and not hastalent(subterfuge_talent) and enemies(tagged=1) < 3 } } and subtletyfinishcdpostconditions() or azeritetraitrank(perforate_trait) >= 2 and enemies(tagged=1) <= 2 and true(position_back) and spell(gloomblade) or hastalent(secret_technique_talent) and hastalent(find_weakness_talent) and target.debuffremaining(find_weakness_debuff) < 1 and enemies(tagged=1) == 2 and target.timetodie() - buffremaining(shadowstrike) > 6 and target.inrange(shadowstrike) and spell(shadowstrike) or not hastalent(deeper_stratagem_talent) and azeritetraitrank(blade_in_the_shadows_trait) == 3 and enemies(tagged=1) == 3 and target.inrange(shadowstrike) and spell(shadowstrike) or use_priority_rotation() and { hastalent(find_weakness_talent) and target.debuffremaining(find_weakness_debuff) < 1 or hastalent(weaponmaster_talent) and enemies(tagged=1) <= 4 or hasazeritetrait(inevitability_trait) and buffpresent(symbols_of_death_buff) and enemies(tagged=1) <= 3 + hasazeritetrait(blade_in_the_shadows_trait) } and target.inrange(shadowstrike) and spell(shadowstrike) or enemies(tagged=1) >= 3 and target.inrange(backstab) and spell(shuriken_storm) or target.inrange(shadowstrike) and spell(shadowstrike)
}
]]

		OvaleScripts:RegisterScript("ROGUE", "subtlety", name, desc, code, "script")
	end
end
